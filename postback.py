from user import User
import requests
import json
from db_connection import *
from handle_waitlist import *
from constant import *

headers = {"Content-Type": "application/json"}
def out(payload):
    try:
        response = requests.post(url, headers=headers, data=json.dumps(payload))
        response.raise_for_status()  # Raise an exception for 4xx/5xx status codes
        print(f"Generic template with image sent successfully: {response.json()}")
    except requests.exceptions.RequestException as e:
        print(f"Failed to send generic template with image: {e}")

#B·∫Øt ƒë·∫ßu s·ª≠a t·ª´ ƒë√¢y
def postback_welcome(user): #Template hi·ªán ra l√∫c ch√†o ƒë√≥n
    if user.nickname.startswith("#CDA") or user.introduce == "Ch∆∞a c√≥" or user.nickname == "" or user.introduce == "":
        text = '''Xin ch√†o b·∫°n ƒë·∫øn v·ªõi s·ª± ki·ªán Crush in Ptit
S·ª± ki·ªán ƒë·ªÉ cho b·∫°n t√¨m ki·∫øm c√≥ c∆° h·ªôi t√¨m t√¨nh y√™u trong ƒë·ªùi mk
H tr∆∞·ªõc ti√™n, b·∫°n h√£y ·∫•n v√°o n√∫t 3 g·∫°ch ngang ·ªü b√™n tay ph·∫£i thanh nh·∫Øn tin
Ti·∫øp theo, b·∫°n ·∫•n v√°o n√∫t "B·∫ÆT ƒê·∫¶U"
'''
    payload = {
        "recipient": {"id": user.id},
        "message": {
            "attachment": {
                "type": "template",
                "payload": {
                    "template_type": "generic",
                    "elements": [
                        { #C·ª•c ƒë·∫ßu ti√™n
                            "title": "CHAT ·∫®N DANH N√ÄO!",
                            "image_url": "https://scontent.fhan5-9.fna.fbcdn.net/v/t39.30808-6/375596172_876783230787846_2912688737487120703_n.png?_nc_cat=109&ccb=1-7&_nc_sid=cc71e4&_nc_eui2=AeGnmMGldbXLaqbYyCTKWw_TfBMnLcq6ceR8Eyctyrpx5FfLuPf1Qy6UjaEhe3z71SaXpR4mnzcjBqM9OyL7w3vb&_nc_ohc=MWH29r0qwwoQ7kNvgFWWpGv&_nc_zt=23&_nc_ht=scontent.fhan5-9.fna&_nc_gid=AFjUetjTLuB8729BhuhF1mg&oh=00_AYDyYbWplN_Mm6Efk3h98lHN5CG8DFAoeWSCS3_NI1mtoQ&oe=677F4BED",  # Thay th·∫ø b·∫±ng URL h√¨nh ·∫£nh b·∫°n mu·ªën,
                            "buttons": [
                                {
                                    "type": "postback",
                                    "title": "B·∫Øt ƒë·∫ßu",
                                    "payload": "#START"
                                },
                                {
                                    "type": "postback",
                                    "title": "H∆∞·ªõng d·∫´n s·ª≠ d·ª•ng",
                                    "payload": "MENU_GUIDE"
                                },
                                {
                                    "type": "postback",
                                    "title": "Gi·ªõi thi·ªáu",
                                    "payload": "MENU_INTRODUCTION"
                                }
                            ]
                        },
                        { #C·ª•c th·ª© 2
                            "title": "ƒêANG C√ì G√å DI·ªÑN RA V·∫¨Y?",
                            "image_url": "https://scontent.fhan5-11.fna.fbcdn.net/v/t39.30808-6/366683630_144682238678402_7554415388400685595_n.jpg?_nc_cat=100&ccb=1-7&_nc_sid=6ee11a&_nc_eui2=AeHqu4RPoy__AHrnLR4zSs-jsxe4Ibj_YGWzF7ghuP9gZT2ujoYig1dOVKbysTzAjFF0tikNzRg2KYfKWdMwebLM&_nc_ohc=xK7K1Orii7wQ7kNvgFYHCQ-&_nc_zt=23&_nc_ht=scontent.fhan5-11.fna&_nc_gid=AG4J78jvFXawC_d58gFyLEo&oh=00_AYC66JN2HGV26-i9Gr0CTnAAPB-Qfv4ATgVsixr8SBtLow&oe=677F59C2", # Thay th·∫ø b·∫±ng URL h√¨nh ·∫£nh b·∫°n mu·ªën,
                            "buttons": [
                                {
                                    "type": "web_url",
                                    "title": "S·∫Øp t·ªõi CDA c√≥ g√¨?",
                                    "url": "https://www.facebook.com/share/p/19XFWoMewv/?mibextid=wwXIfr"
                                },
                                {
                                    "type": "postback",
                                    "title": "Xem h√†ng ch·ªù",
                                    "payload": "MENU_VIEW_QUEUE"
                                }

                            ]
                        },
                        { #C·ª•c th·ª© 3
                            "title": "ALO, T√îI NGHE",
                            "image_url": "https://bibungbia.pythonanywhere.com/assets/fire.png",  # Thay th·∫ø b·∫±ng URL h√¨nh ·∫£nh b·∫°n mu·ªën
                            "buttons": [
                                {
                                    "type":"web_url",
                                    "title": "B√°o l·ªói",
                                    "url":"https://www.messenger.com/t/226475877409994"
                                },
                                {
                                    "type": "web_url",
                                    "title": "Li√™n h·ªá admin",
                                    "payload": "https://www.messenger.com/t/226475877409994"
                                },
                                {
                                    "type":"web_url",
                                    "title": "Fanpage CDA",
                                    "url":"https://www.facebook.com/CDAclub"
                                }
                            ]
                        }
                    ]
                }
            }
        }
    }
    out(payload)

def postback_first_come(user):
    if user.nickname.startswith("#CDA") or user.introduce == "Ch∆∞a c√≥" or user.nickname == "" or user.introduce == "":
        text = f'''B·∫°n ch∆∞a nh·∫≠p ƒë·ªß th√¥ng tin. Vui l√≤ng th√™m th√¥ng tin ƒë·ªÉ ti·∫øp t·ª•c:
Nickname hi·ªán t·∫°i: {user.nickname if user.nickname else 'Ch∆∞a nh·∫≠p'}
Gi·ªõi thi·ªáu hi·ªán t·∫°i: {user.introduce if user.introduce else 'Ch∆∞a nh·∫≠p'}

ƒê·ªÉ thay ƒë·ªïi, g√µ /nickname v√† /gioithieu
V√≠ d·ª•:
/nickname v√¨_tinh_t√∫_97
/gioithieu C·∫≠u c√≥ ph·∫£i l√† ƒëom ƒë√≥m kh√¥ng? T·ªõ th√≠ch ƒëom ƒë√≥m l·∫Øm n√®
        '''
        payload = {
            "recipient": {"id": user.id},
            "message": {
                "attachment": {
                    "type": "template",
                    "payload": {
                        "template_type": "button",
                        "text": text,
                        "buttons": [
                            {
                                "type": "postback",
                                "title": "NH·∫¨P TH√îNG TIN",
                                "payload": "#RETRY"
                            }
                        ]
                    }
                }
            }
        }
    else:
        text = f'''Nickname hi·ªán t·∫°i: {user.nickname}
Gi·ªõi thi·ªáu hi·ªán t·∫°i: {user.introduce}

B·∫°n ƒë√£ s·∫µn s√†ng ti·∫øp t·ª•c!
        '''
        payload = {
            "recipient": {"id": user.id},
            "message": {
                "attachment": {
                    "type": "template",
                    "payload": {
                        "template_type": "button",
                        "text": text,
                        "buttons": [
                            {
                                "type": "postback",
                                "title": "TI·∫æP",
                                "payload": "#NEXT"
                            }
                        ]
                    }
                }
            }
        }
    out(payload)


def postback_remind_nickname(user):
    if user.nickname.startswith("#CDA") or user.introduce == "Ch∆∞a c√≥" or user.nickname == "" or user.introduce == "":
        text = '''B·∫°n ch∆∞a nh·∫≠p ƒë·ªß th√¥ng tin c·∫ßn thi·∫øt.
Vui l√≤ng nh·∫≠p:
/nickname ƒë·ªÉ ƒë·ªïi bi·ªát danh
V√≠ d·ª•: /nickname mai_khanhh

/gioithieu ƒë·ªÉ gi·ªõi thi·ªáu ng·∫Øn v·ªÅ m√¨nh
V√≠ d·ª•:
/gioithieu c·∫ßn ng∆∞·ªùi g·∫•p m√†n h·ªô, nhi·ªÅu mu·ªói m√† bung m√†n ra kh√¥ng b√≠t g·∫•p ü•∫
'''
        payload = {
            "recipient": {"id": user.id},
            "message": {
                "attachment": {
                    "type": "template",
                    "payload": {
                        "template_type": "button",
                        "text": text,
                        "buttons": [
                            {
                                "type": "postback",
                                "title": "NH·∫¨P TH√îNG TIN",
                                "payload": "#RETRY"
                            }
                        ]
                    }
                }
            }
        }
    else:
        text = '''ƒê·ª´ng qu√™n c√°c c√¢u l·ªánh:
/nickname ƒë·ªÉ ƒë·ªïi bi·ªát danh
/gioithieu ƒë·ªÉ gi·ªõi thi·ªáu ng·∫Øn v·ªÅ m√¨nh nh√©!
'''
        payload = {
            "recipient": {"id": user.id},
            "message": {
                "attachment": {
                    "type": "template",
                    "payload": {
                        "template_type": "button",
                        "text": text,
                        "buttons": [
                            {
                                "type": "postback",
                                "title": "TI·∫æP",
                                "payload": "#NEXT"
                            }
                        ]
                    }
                }
            }
        }
    out(payload)


def postback_setting(user):
    if user.nickname.startswith("#CDA") or user.introduce == "Ch∆∞a c√≥" or user.nickname == "" or user.introduce == "":
        text = '''B·∫°n ch∆∞a nh·∫≠p ƒë·ªß th√¥ng tin. Vui l√≤ng nh·∫≠p th√¥ng tin tr∆∞·ªõc khi ti·∫øp t·ª•c.
C√¢u l·ªánh:
/nickname ƒë·ªÉ ƒë·ªïi bi·ªát danh
/gioithieu ƒë·ªÉ gi·ªõi thi·ªáu ng·∫Øn v·ªÅ m√¨nh
'''
        payload = {
            "recipient": {"id": user.id},
            "message": {
                "attachment": {
                    "type": "template",
                    "payload": {
                        "template_type": "button",
                        "text": text,
                        "buttons": [
                            {
                                "type": "postback",
                                "title": "NH·∫¨P TH√îNG TIN",
                                "payload": "#RETRY"
                            }
                        ]
                    }
                }
            }
        }
    else:
        gender, partner = 'A', 'B'
        match user.gender:
            case 'MALE':
                gender = 'Nam'
            case 'FEMALE':
                gender = 'N·ªØ'
            case 'BI':
                gender = 'B√≠ m·∫≠t'
        match user.partner_gender:
            case 'MALE':
                partner = 'Nam'
            case 'FEMALE':
                partner = 'N·ªØ'
            case 'BI':
                partner = 'Nh·∫°c n√†o c≈©ng nh·∫£y'

        text = f'''Nickname c·ªßa b·∫°n: {user.nickname}
Gi·ªõi t√≠nh b·∫°n ch·ªçn: {gender}
Gu b·∫°n ch·ªçn: {partner}
Gi·ªõi thi·ªáu ng·∫Øn g·ªçn: '{user.introduce}'
B·∫°n c√≥ mu·ªën thay ƒë·ªïi hay t√¨m ki·∫øm lu√¥n?
        '''
        payload = {
            "recipient": {"id": user.id},
            "message": {
                "attachment": {
                    "type": "template",
                    "payload": {
                        "template_type": "button",
                        "text": text,
                        "buttons": [
                            {
                                "type": "postback",
                                "title": "T√åM KI·∫æM LU√îN!",
                                "payload": "#SEARCH"
                            },
                            {
                                "type": "postback",
                                "title": "ƒê·ªîI TH√îNG TIN",
                                "payload": "#CHANGE"
                            }
                        ]
                    }
                }
            }
        }
    out(payload)


def postback_setgender(user):
    """Hi·ªÉn th·ªã b∆∞·ªõc ch·ªçn gi·ªõi t√≠nh."""
    text = "H√£y ch·ªçn gi·ªõi t√≠nh c·ªßa b·∫°n:"
    payload = {
        "recipient": {"id": user.id},
        "message": {
            "attachment": {
                "type": "template",
                "payload": {
                    "template_type": "button",
                    "text": text,
                    "buttons": [
                        {"type": "postback", "title": "Nam", "payload": "#ME_MALE"},
                        {"type": "postback", "title": "N·ªØ", "payload": "#ME_FEMALE"},
                        {"type": "postback", "title": "B√≠ m·∫≠t", "payload": "#ME_BI"}
                    ]
                }
            }
        }
    }
    out(payload)


def  postback_partnergender(user): #Hi·ªán ra ƒë·ªÉ ng∆∞·ªùi d√πng ch·ªçn gu c·ªßa m√¨nh
    payload = {
        "recipient": {"id": user.id},
        "message": {
            "attachment": {
                "type": "template",
                "payload": {
                    "template_type": "button",
                    "text":"Gu c·ªßa b·∫°n l√† g√¨?",
                    "buttons": [
                        {
                            "type": "postback",
                            "title": "Nam",
                            "payload": "#YOU_MALE"
                        },
                        {
                            "type": "postback",
                            "title": "N·ªØ",
                            "payload": "#YOU_FEMALE"
                        },
                        {
                            "type": "postback",
                            "title": "Nh·∫°c n√†o c≈©ng nh·∫£y",
                            "payload": "#YOU_BI"
                        },
                    ]
                }
            }
        }
    }
    out(payload)

def postback_search(user): #Th√¥ng b√°o b·∫Øt ƒë·∫ßu t√¨m ki·∫øm
    payload = {
        "recipient": {"id": user.id},
        "message": {
            "attachment": {
                "type": "template",
                "payload": {
                    "template_type": "button",
                    "text": "BOTBOT ƒëang t√¨m ki·∫øm...\nƒê·ª£i ch√∫t nh√©",
                    "buttons": [
                        {
                            "type": "postback",
                            "title": "D·ª™NG T√åM KI·∫æM",
                            "payload": "#STOP_SEARCH"
                        }

                    ]
                }
            }
        }
    }
    out(payload)

def postback_found(user, partner, wait_time):
    #Code ne
    diff = datetime.now() - partner.last_action_time if partner.last_action_time else timedelta(seconds=0)
    wait_seconds = diff.total_seconds()  #Thay time

    #dk
    if wait_seconds < 60:
        text_user = f'''BOTBOT ƒë√£ t√¨m th·∫•y!
B·∫°n ƒë√£ ƒë∆∞·ª£c mai m·ªëi v·ªõi: {partner.nickname}
1 x√≠u v·ªÅ h·ªç: {partner.introduce}

{partner.nickname} ch·ªâ m·ªõi ch·ªù {wait_time}, duy√™n s·ªë t√¨m ƒë·∫øn 2 b·∫°n tr∆∞·ªõc khi cupid k·ªãp gi∆∞∆°ng cung r·ªìi ƒë√≥!
H√£y c√πng b·∫Øt ƒë·∫ßu cu·ªôc tr√≤ chuy·ªán ngay n√†o!
        '''
    else:
        text_user = f'''BOTBOT ƒë√£ t√¨m th·∫•y!
B·∫°n ƒë√£ ƒë∆∞·ª£c mai m·ªëi v·ªõi: {partner.nickname}
1 x√≠u v·ªÅ h·ªç: {partner.introduce}

{partner.nickname} ƒë√£ ƒë·ª£i b·∫°n {wait_time} n√™n c√≥ th·ªÉ h·ªç ƒëang ch∆∞a ƒë·ªÉ √Ω tin nh·∫Øn. G·∫∑p nhau l√† duy√™n s·ªë, h√£y ki√™n nh·∫´n ch√∫t nh√©!
N·∫øu th·∫•y {partner.nickname} qu√° l√¢u kh√¥ng ph·∫£n h·ªìi th√¨ b·∫°n c√≥ th·ªÉ /end v√† t√¨m l·∫°i.
        '''

    # Send the message to the user
    payload = {
        "recipient": {"id": user.id},
        "message": {
            "attachment": {
                "type": "template",
                "payload": {
                    "template_type": "button",
                    "text": text_user,
                    "buttons": [
                        {
                            "type": "postback",
                            "title": "XEM H√ÄNG CH·ªú",
                            "payload": "MENU_VIEW_QUEUE"
                        },
                        {
                            "type": "postback",
                            "title": "G·ª¢I √ù M·ªû L·ªúI",
                            "payload": "SUGGEST"
                        }
                    ]
                }
            }
        }
    }
    out(payload)

    # Construct message for partner
    text_partner = f'''ƒê√£ t√¨m th·∫•y!
Sau {wait_time}, ch√∫ng t√¥i ƒë√£ t√¨m ƒë∆∞·ª£c ng∆∞·ªùi ph√π h·ª£p cho b·∫°n, hehe

B·∫°n ƒë√£ ƒë∆∞·ª£c mai m·ªëi v·ªõi: {user.nickname}
1 x√≠u v·ªÅ h·ªç: {user.introduce}

Ch√∫c b·∫°n ngon mi·ªáng!
'''
    payload = {
        "recipient": {"id": partner.id},
        "message": {
            "attachment": {
                "type": "template",
                "payload": {
                    "template_type": "button",
                    "text": text_partner,
                    "buttons": [
                        {
                            "type": "postback",
                            "title": "G·ª¢I √ù M·ªû L·ªúI",
                            "payload": "SUGGEST"
                        }
                    ]
                }
            }
        }
    }
    out(payload)


def postback_feedback(user): #Y√™u c·∫ßu ng∆∞·ªùi d√πng feedback v·ªÅ cu·ªôc tr√≤ chuy·ªán v·ª´a r·ªìi
    payload= {}
    out(payload)

def postback_confirm_end(user): #Hi·ªán ra khi ng∆∞·ªùi d√πng mu·ªën end, h·ªèi l·∫°i cho ch·∫Øc l√† c√≥ mu·ªën r·ªùi kh√¥ng?
    # ·ªü ƒë√¢y ph·∫£i c√≥ #END
    payload = {
        "recipient": {"id": user.id},
        "message": {
            "attachment": {
                "type": "template",
                "payload": {
                    "template_type": "button",
                    "text":"B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën tho√°t?",
                    "buttons": [
                        {
                            "type": "postback",
                            "title": "Tho√°t",
                            "payload": "#END"
                        },
                        {
                            "type": "postback",
                            "title": "Kh√¥ng",
                            "payload": "NOTHING"
                        }
                    ]
                }
            }
        }
    }
    out(payload)

def postback_end_chat(user): #Khi end chat
    payload = {
        "recipient": {"id": user.id},
        "message": {
            "attachment": {
                "type": "template",
                "payload": {
                    "template_type": "button",
                    "text":"Xong 1 hi·ªáp, ti·∫øp ph√°t n·ªØa nh·ªÉ?",
                    "buttons": [
                        {
                            "type": "postback",
                            "title": "T√åM M·ªêI M·ªöI",
                            "payload": "#AGAIN"
                        },
                        {
                            "type": "postback",
                            "title": "XEM H√ÄNG CH·ªú",
                            "payload": "MENU_VIEW_QUEUE"
                        },
                        {
                            "type": "postback",
                            "title": "V·ªÄ TRANG CH·ª¶",
                            "payload": "#WELCOME"
                        },
                    ]
                }
            }
        }
    }
    out(payload)
def postback_partner_end(partner_id):
    payload = {
        "recipient": {"id": partner_id},
        "message": {
            "attachment": {
                "type": "template",
                "payload": {
                    "template_type": "button",
                    "text":"Ng∆∞·ªùi kia ƒë√£ b·ªè b·∫°n m√† ra ƒëi... Th√¥i th√¨ ƒë·ªïi ƒë√†o nh·ªâ?",
                    "buttons": [
                        {
                            "type": "postback",
                            "title": "T√åM M·ªêI M·ªöI",
                            "payload": "#AGAIN"
                        },
                        {
                            "type": "postback",
                            "title": "XEM H√ÄNG CH·ªú",
                            "payload": "MENU_VIEW_QUEUE"
                        },
                        {
                            "type": "postback",
                            "title": "V·ªÄ TRANG CH·ª¶",
                            "payload": "#WELCOME"
                        },
                    ]
                }
            }
        }
    }
    out(payload)

def postback_end(user):
    payload = {
        "recipient": {"id": user.id},
        "message": {
            "attachment": {
                "type": "template",
                "payload": {
                    "template_type": "button",
                    "text":"K·∫øt th√∫c 1 hi·ªáp",
                    "buttons": [
                        {
                            "type": "postback",
                            "title": "V·ªÄ TRANG CH·ª¶",
                            "payload": "#WELCOME"
                        },
                    ]
                }
            }
        }
    }
    out(payload)

def postback_guide(user):
    payload = {
        "recipient": {"id": user.id},
        "message": {"text": '''ƒê∆°n gi·∫£n th√¥i kh√¥ng c√≥ g√¨ kh√≥ khƒÉn v·ªõi b·∫°n ƒë√¢u
1. ƒê·∫ßu ti√™n, b·∫°n h√£y l·ª±a ch·ªçn gi·ªõi t√≠nh c·ªßa b·∫£n th√¢n(gi·ªõi t√≠nh m√† t√¢m h·ªìn b·∫°n ƒëang mang)
2. Ti·∫øp theo, b·∫°n h√£y ch·ªçn gu gi·ªõi t√≠nh ng∆∞·ªùi b·∫°n mu·ªën l√†m quen
3. Sau ƒë√≥, b·∫°n ·∫•n t√¨m ki·∫øm ƒë·ªÉ ch√∫ng t√¥i c√≥ th·ªÉ gi√∫p b·∫°n g·∫∑p ƒë∆∞·ª£c ng∆∞·ªùi ph√π h·ª£p v·ªõi mong mu·ªën c·ªßa b·∫°n
4. N·∫øu b·∫°n mu·ªën ƒë·ªïi nickname ho·∫∑c gi·ªõi thi·ªáu b·∫£n th√¢n th√¨ h√£y d√πng:
/nickname ho·∫∑c /gioithieu  nh√© !
5. N·∫øu kh√¥ng bi·∫øt ph·∫£i m·ªü l·ªùi v·ªõi ƒë·ªëi ph∆∞∆°ng nh∆∞ n√†o hay trong t√¨nh tr·∫°ng h·∫øt vƒÉn th√¨ h√£y ·∫•n v√†o "G·ª£i √Ω m·ªü l·ªùi", ch√∫ng t√¥i s·∫Ω gi√∫p ƒë·ª° b·∫°n m·ªôt ph·∫ßn n√†o ƒë·∫•y ƒë·ªÉ c√°c b·∫°n c√≥ th·ªÉ d·ªÖ d√†ng ti·∫øp c·∫≠n nhau h∆°n :3
6. N·∫øu c·∫£m th·∫•y ƒë·ªëi ph∆∞∆°ng kh√¥ng ph√π h·ª£p v·ªõi b·∫£n th√¢n v√† mu·ªën k·∫øt th√∫c cu·ªôc tr√≤ chuy·ªán th√¨ h√£y g√µ /end ho·∫∑c ·∫•n c√°i n√∫t ‚ùåK·∫æT TH√öC ·ªü MENU  ƒë·ªÉ  k·∫øt th√∫c cc√¢u chuy·ªán v·ªõi ng∆∞·ªùi ƒë√≥ v√† c√≥ th·ªÉ ti·∫øp t·ª•c t√¨m ki·∫øm nh·ªØng ng∆∞·ªùi ph√π h·ª£p v·ªõi mong mu·ªën  c·ªßa b·∫°n

H√£y g√µ /lenh ƒë·ªÉ hi·ªÉn th·ªã t·∫•t c·∫£ nh·ªØng c√¢u l·ªánh b·∫°n c√≥ th·ªÉ s·ª≠ d·ª•ng
'''},
        "messaging_type": "RESPONSE"
    }
    out(payload)

def postback_introduction(user): #Gi·ªõi thi·ªáu v·ªÅ ·ª©ng d·ª•ng
    payload= {}
    out(payload)

def initiate_reply(user, message_id):
    """Y√™u c·∫ßu ng∆∞·ªùi d√πng nh·∫≠p n·ªôi dung ph·∫£n h·ªìi."""
    user.temp_message_id = message_id  # L∆∞u ID tin nh·∫Øn t·∫°m th·ªùi
    update_temp_message_id(user.id, message_id)  # L∆∞u v√†o database (n·∫øu c·∫ßn)
    send_message(user.id, "Vui l√≤ng nh·∫≠p n·ªôi dung ph·∫£n h·ªìi c·ªßa b·∫°n:")



def postback_view_queue(user): #Xem h√†ng ƒë·ª£i, to√†n l√† code SQL, n√™n ƒë·ªÉ anh vi·∫øt
    print("Wait list after global ", wait_list)
    count_male = 0
    for x in wait_list:
        if (x.gender == "MALE"):
            count_male += 1
    count_male += 3
    count_female = 0
    for x in wait_list:
        if x.gender == "FEMALE":
            count_female += 1
    count_female += 5
    count_bi = 0
    for x in wait_list:
        if x.gender == "BI":
            count_bi += 1
    count_bi += 7
    count_suit = 0
    for x in wait_list:
        if (check_match(user, x)) and (user.id != x.id) :
            count_suit += 1
    count_suit += 3
    payload = {
        "recipient": {"id": user.id},
        "message": {"text": f'''Hi·ªán ƒëang c√≥:
{count_male} Nam
{count_female} N·ªØ
{count_bi} B√≠ m·∫≠t trong h√†ng ch·ªù

{count_suit} ng∆∞·ªùi ph√π h·ª£p gu c·ªßa b·∫°n
'''},
        "messaging_type": "RESPONSE"
    }
    out(payload)

def postback_change_info(user): #N·∫±m ·ªü menu khi ng∆∞·ªùi d√πng mu·ªën ƒë·ªïi nickname ho·∫∑c gi·ªõi thi·ªáu b·∫£n th√¢n
    #g√µ /nickname ƒë·ªÉ ƒë·ªïi bi·ªát danh
    # /gioithieu ƒë·ªÉ ƒë·ªïi gi·ªõi thi·ªáu v·ªÅ b·∫°n
    # /gioitinh Nam, Nu, Bi ƒë·ªÉ ƒë·ªïi gi·ªõi t√≠nh
    # /gu Nam, Nu, Bi ƒë·ªÉ ƒë·ªïi gu:
    payload= {}
    out(payload)

def postback_suggest(user): #Hi·ªán ra khi ng∆∞·ªùi d√πng mu·ªën g·ª£i √Ω vƒÉn ƒë·ªÉ b·∫Øt chuy·ªán
    payload = {
        "recipient": {"id": user.id},
        "message": {"text": "Ch√†o b·∫°n, b·∫°n ƒÉn c∆°m ch∆∞a \n B·∫°n ∆°i, b·ªô lu·∫≠t m·ªõi c√≥ quy ƒë·ªãnh n√†o c·∫•m l√†m quen v·ªõi ng∆∞·ªùi d·ªÖ th∆∞∆°ng kh√¥ng nh·ªâ ? N·∫øu kh√¥ng th√¨ cho m√¨nh th·ª≠ nh√© :3 \n Tr·ªùi l·∫°nh nh∆∞ n√†y m√¨nh h·ªèi nh·ªè, c·∫≠u c√≥ c·∫ßn ai nh·∫Øc m·∫∑c ·∫•m hong \n C·∫≠u c√≥ bi·∫øt l√† ƒë·ªÉ nghƒ© c√°ch b·∫Øt chuy·ªán v·ªõi c·∫≠u t·ªõ m·∫•t bao nhi√™u th·ªùi gian c·ªßa cu·ªôc ƒë·ªùi kh√¥ng, v·∫≠y n√™n h√£y ƒë·ªÅn b√π b·∫±ng c√°ch tr√≤ chuy·ªán v·ªõi t·ªõ h√¥m nay ƒëi \n C·∫≠u ∆°i m√¨nh ƒëang l√†m m·ªôt b√†i kh·∫£o s√°t : C·∫≠u th√≠ch u·ªëng tr√† s·ªØa v·ªõi ƒë∆∞·ªùng hay v·ªõi t·ªõ h∆°n v·∫≠y \n Nay xem tarot ng∆∞·ªùi ta b·∫£o t·ªõ nh·∫Øn tin v·ªõi ƒë·ªãnh m·ªánh m√† t√¨nh c·ªù th·∫ø n√†o nay t·ªõ l·∫°i nh·∫Øn v·ªõi m·ªói c·∫≠u nh·ªâ "},
        "messaging_type": "RESPONSE"
    }
    out(payload)
def postback_still_chat(user):
    payload = {
        "recipient": {"id": user.id},
        "message": {"text": "H√£y t·ª´ t·ª´ ƒë·ªÉ ta c√≥ th·ªÉ t√¨m hi·ªÉu r√µ v·ªÅ nhau h∆°n nh√© \n "},
        "messaging_type": "RESPONSE"
    }
    out(payload)

#Postback retry

def postback_retry(user):
    """Ki·ªÉm tra th√¥ng tin ng∆∞·ªùi d√πng v√† chuy·ªÉn ti·∫øp ƒë·∫øn b∆∞·ªõc ti·∫øp theo n·∫øu ƒë·∫ßy ƒë·ªß."""
    missing_info = []

    # Ki·ªÉm tra thi·∫øu nickname
    if user.nickname.startswith("#CDA") or not user.nickname:
        missing_info.append("nickname")

    # Ki·ªÉm tra thi·∫øu gi·ªõi thi·ªáu
    if user.introduce == "Ch∆∞a c√≥" or not user.introduce:
        missing_info.append("gi·ªõi thi·ªáu")

    if missing_info:
        # Hi·ªÉn th·ªã th√¥ng tin c√≤n thi·∫øu
        missing_text = " v√† ".join(missing_info)
        text = f'''B·∫°n ch∆∞a ho√†n thi·ªán th√¥ng tin. B·∫°n c√≤n thi·∫øu {missing_text}.
Vui l√≤ng nh·∫≠p:
- /nickname ƒë·ªÉ ƒë·ªïi bi·ªát danh
- /gioithieu ƒë·ªÉ gi·ªõi thi·ªáu ng·∫Øn v·ªÅ m√¨nh
'''
        payload = {
            "recipient": {"id": user.id},
            "message": {"text": text}
        }
    else:
        # N·∫øu ƒë·∫ßy ƒë·ªß, chuy·ªÉn ng∆∞·ªùi d√πng sang b∆∞·ªõc ch·ªçn gi·ªõi t√≠nh
        text = "Th√¥ng tin c·ªßa b·∫°n ƒë√£ ƒë·∫ßy ƒë·ªß! H√£y ti·∫øp t·ª•c ƒë·∫øn b∆∞·ªõc ch·ªçn gi·ªõi t√≠nh."
        payload = {
            "recipient": {"id": user.id},
            "message": {
                "attachment": {
                    "type": "template",
                    "payload": {
                        "template_type": "button",
                        "text": text,
                        "buttons": [
                            {
                                "type": "postback",
                                "title": "CH·ªåN GI·ªöI T√çNH",
                                "payload": "#NEXT"
                            }
                        ]
                    }
                }
            }
        }
    out(payload)

#Postback retry

def postback_error(user):
    payload = {
        "recipient": {"id": user.id},
        "message": {"text": "B·∫°n ƒëang b·ªã l·ªói b·∫•t th∆∞·ªùng do server, vui l√≤ng g√µ /end, tho√°t v√† sau ƒë√≥ g√µ /fix. C·∫£m ∆°n"},
        "messaging_type": "RESPONSE"
    }
    out(payload)