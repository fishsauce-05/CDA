from user import User
import requests
import json
from db_connection import *
from handle_waitlist import *
from constant import *

headers = {"Content-Type": "application/json"}
def out(payload):
    try:
        response = requests.post(url, headers=headers, data=json.dumps(payload))
        response.raise_for_status()  # Raise an exception for 4xx/5xx status codes
        print(f"Generic template with image sent successfully: {response.json()}")
    except requests.exceptions.RequestException as e:
        print(f"Failed to send generic template with image: {e}")

#B·∫Øt ƒë·∫ßu s·ª≠a t·ª´ ƒë√¢y
def postback_welcome(user): #Template hi·ªán ra l√∫c ch√†o ƒë√≥n
    payload = {
        "recipient": {"id": user.id},
        "message": {
            "attachment": {
                "type": "template",
                "payload": {
                    "template_type": "generic",
                    "elements": [
                        { #C·ª•c ƒë·∫ßu ti√™n
                            "title": "CHAT ·∫®N DANH N√ÄO!",
                            "image_url": "https://cdn.tuoitre.vn/thumb_w/480/471584752817336320/2023/3/5/cau-do-2-16779929961011467051251.jpg",  # Thay th·∫ø b·∫±ng URL h√¨nh ·∫£nh b·∫°n mu·ªën
                            "buttons": [
                                {
                                    "type": "postback",
                                    "title": "B·∫Øt ƒë·∫ßu",
                                    "payload": "#START"
                                },
                                {
                                    "type": "postback",
                                    "title": "H∆∞·ªõng d·∫´n s·ª≠ d·ª•ng",
                                    "payload": "MENU_GUIDE"
                                },
                                {
                                    "type": "postback",
                                    "title": "Gi·ªõi thi·ªáu",
                                    "payload": "MENU_INTRODUCTION"
                                }
                            ]
                        },
                        { #C·ª•c th·ª© 2
                            "title": "ƒêANG C√ì G√å DI·ªÑN RA V·∫¨Y?",
                            "image_url": "https://cdn.tuoitre.vn/thumb_w/480/471584752817336320/2023/3/5/cau-do-1-16779929960982066590826.jpg",  # Thay th·∫ø b·∫±ng URL h√¨nh ·∫£nh b·∫°n mu·ªën
                            "buttons": [
                                {
                                    "type": "web_url",
                                    "title": "S·∫Øp t·ªõi CDA c√≥ g√¨?",
                                    "url": "https://www.facebook.com/share/p/19XFWoMewv/?mibextid=wwXIfr"
                                },
                                {
                                    "type": "postback",
                                    "title": "Xem h√†ng ch·ªù",
                                    "payload": "MENU_VIEW_QUEUE"
                                }

                            ]
                        },
                        { #C·ª•c th·ª© 3
                            "title": "ALO, T√îI NGHE",
                            "image_url": "https://bibungbia.pythonanywhere.com/assets/fire.png",  # Thay th·∫ø b·∫±ng URL h√¨nh ·∫£nh b·∫°n mu·ªën
                            "buttons": [
                                {
                                    "type":"web_url",
                                    "title": "B√°o l·ªói",
                                    "url":"https://www.messenger.com/t/226475877409994"
                                },
                                {
                                    "type": "web_url",
                                    "title": "Li√™n h·ªá admin",
                                    "payload": "https://www.messenger.com/t/226475877409994"
                                },
                                {
                                    "type":"web_url",
                                    "title": "Fanpage CDA",
                                    "url":"https://www.facebook.com/CDAclub"
                                }
                            ]
                        }
                    ]
                }
            }
        }
    }
    out(payload)

def postback_first_come(user):
    payload = {
        "recipient": {"id": user.id},
        "message": {
            "attachment": {
                "type": "template",
                "payload": {
                    "template_type": "button",
                    "text": f'''B·∫°n ch∆∞a c√≥ th√¥ng tin. Ch√∫ng ta c√πng nhau th√™m th√¥ng tin nh√©!
Nickname m·∫∑c ƒë·ªãnh l√†: {user.nickname}
Gi·ªõi thi·ªáu m·∫∑c ƒë·ªãnh l√†: {user.introduce}
Gi·ªõi thi·ªáu ng·∫Øn g·ªçn v√† g·ª£i ch·ªß ƒë·ªÅ gi√∫p c√°c b·∫°n kh√¥ng b·ªã b√≠ √Ω t∆∞·ªüng, d·ªÖ b·∫Øt chuy·ªán m·ªü l·ªùi h∆°n

ƒê·ªÉ thay ƒë·ªïi, g√µ /nickname v√† /gioithieu
V√≠ d·ª•:
/nickname v√¨_tinh_t√∫_97
/gioithieu C·∫≠u c√≥ ph·∫£i l√† ƒëom ƒë√≥m kh√¥ng? T·ªõ th√≠ch ƒëom ƒë√≥m l·∫Øm n√®

M·ªói tin nh·∫Øn ch·ªâ ƒë·ªçc ƒë∆∞·ª£c 1 l·ªánh duy nh·∫•t, ƒë·ª´ng vi·∫øt li·ªÅn l·ªánh trong 1 tin nh·∫Øn
''',
                    "buttons": [
                        {
                            "type": "postback",
                            "title": "TI·∫æP",
                            "payload": "#NEXT"
                        }
                    ]
                }
            }
        }
    }
    out(payload)

def postback_remind_nickname(user):
    payload = {
        "recipient": {"id": user.id},
        "message": {
            "attachment": {
                "type": "template",
                "payload": {
                    "template_type": "button",
                    "text":'''ƒê·ª´ng qu√™n c√¢u l·ªánh
/nickname ƒë·ªÉ ƒë·ªïi bi·ªát danh
V√≠ d·ª•:
/nickname mai_khanhh

/gioithieu ƒë·ªÉ ƒë·ªïi gi·ªõi thi·ªáu ng·∫Øn v·ªÅ m√¨nh nh√©!
V√≠ d·ª•:
/gioithieu c·∫ßn ng∆∞·ªùi g·∫•p m√†n h·ªô, nhi·ªÅu mu·ªói m√† bung m√†n ra kh√¥ng b√≠t g·∫•p ü•∫
''',
                    "buttons": [
                        {
                            "type": "postback",
                            "title": "TI·∫æP",
                            "payload": "#NEXT"
                        }
                    ]
                }
            }
        }
    }
    out(payload)

def postback_setting(user): #Hi·ªán ra khi ng∆∞·ªùi d√πng b·∫•m v√†o (B·∫ÆT ƒê·∫¶U: payload = #START)
    gender, partner = 'A', 'B'
    match user.gender:
        case 'MALE':
            gender = 'Nam'
        case 'FEMALE':
            gender = 'N·ªØ'
        case 'BI':
            gender = 'B√≠ m·∫≠t'
    match user.partner_gender:
        case 'MALE':
            partner = 'Nam'
        case 'FEMALE':
            partner = 'N·ªØ'
        case 'BI':
            partner = 'Nh·∫°c n√†o c≈©ng nh·∫£y'

    text = f'''Nickname c·ªßa b·∫°n: {user.nickname}
Gi·ªõi t√≠nh b·∫°n ch·ªçn: {gender}
Gu b·∫°n ch·ªçn: {partner}
Gi·ªõi thi·ªáu ng·∫Øn g·ªçn: '{user.introduce}'
B·∫°n c√≥ mu·ªën thay ƒë·ªïi hay t√¨m ki·∫øm lu√¥n?
    '''
    payload = {
        "recipient": {"id": user.id},
        "message": {
            "attachment": {
                "type": "template",
                "payload": {
                    "template_type": "button",
                    "text":text,
                    "buttons": [
                        {
                            "type": "postback",
                            "title": "T√åM KI·∫æM LU√îN!",
                            "payload": "#SEARCH"
                        },
                        {
                            "type": "postback",
                            "title": "ƒê·ªîI TH√îNG TIN",
                            "payload": "#CHANGE"
                        }

                    ]
                }
            }
        }
    }
    out(payload)


def postback_setgender(user): #Hi·ªán ra ƒë·ªÉ ng∆∞·ªùi d√πng ch·ªçn gi·ªõi t√≠nh
    payload = {
        "recipient": {"id": user.id},
        "message": {
            "attachment": {
                "type": "template",
                "payload": {
                    "template_type": "button",
                    "text":"Ch·ªçn gi·ªõi t√≠nh c·ªßa b·∫°n",
                    "buttons": [
                        {
                            "type": "postback",
                            "title": "Nam",
                            "payload": "#ME_MALE"
                        },
                        {
                            "type": "postback",
                            "title": "N·ªØ",
                            "payload": "#ME_FEMALE"
                        },
                        {
                            "type": "postback",
                            "title": "B√≠ m·∫≠t",
                            "payload": "#ME_BI"
                        },
                    ]
                }
            }
        }
    }
    out(payload)

def  postback_partnergender(user): #Hi·ªán ra ƒë·ªÉ ng∆∞·ªùi d√πng ch·ªçn gu c·ªßa m√¨nh
    payload = {
        "recipient": {"id": user.id},
        "message": {
            "attachment": {
                "type": "template",
                "payload": {
                    "template_type": "button",
                    "text":"Gu c·ªßa b·∫°n l√† g√¨?",
                    "buttons": [
                        {
                            "type": "postback",
                            "title": "Nam",
                            "payload": "#YOU_MALE"
                        },
                        {
                            "type": "postback",
                            "title": "N·ªØ",
                            "payload": "#YOU_FEMALE"
                        },
                        {
                            "type": "postback",
                            "title": "Nh·∫°c n√†o c≈©ng nh·∫£y",
                            "payload": "#YOU_BI"
                        },
                    ]
                }
            }
        }
    }
    out(payload)

def postback_search(user): #Th√¥ng b√°o b·∫Øt ƒë·∫ßu t√¨m ki·∫øm
    payload = {
        "recipient": {"id": user.id},
        "message": {
            "attachment": {
                "type": "template",
                "payload": {
                    "template_type": "button",
                    "text": "BOTBOT ƒëang t√¨m ki·∫øm...\nƒê·ª£i ch√∫t nh√©",
                    "buttons": [
                        {
                            "type": "postback",
                            "title": "D·ª™NG T√åM KI·∫æM",
                            "payload": "#STOP_SEARCH"
                        }

                    ]
                }
            }
        }
    }
    out(payload)

def postback_found(user, partner, wait_time): #Th√¥ng b√°o l√† ƒë√£ t√¨m th·∫•y ƒë·ªëi t∆∞·ª£ng ph√π h·ª£p, b·∫Øt ƒë·∫ßu chat
    #nh·ªõ hi·ªán c·∫£nh b√°o cho user l√† partner ƒë√£ ƒë·ª£i ƒë∆∞·ª£c bao l√¢u v√† n·∫øu h·ªç kh√¥ng ph·∫£n h·ªìi th√¨ n√™n t√¨m ng∆∞·ªùi kh√°c
    text_user = f'''BOTBOT ƒë√£ t√¨m th·∫•y!
B·∫°n ƒë√£ ƒë∆∞·ª£c mai m·ªëi v·ªõi: {partner.nickname}
1 x√≠u v·ªÅ h·ªç: {partner.introduce}

{partner.nickname} ƒë√£ ƒë·ª£i b·∫°n {wait_time} n√™n c√≥ th·ªÉ h·ªç ƒëang ch∆∞a ƒë·ªÉ √Ω tin nh·∫Øn. G·∫∑p nhau l√† duy√™n s·ªë, h√£y ki√™n nh·∫´n ch√∫t nh√©!
N·∫øu th·∫•y {partner.nickname} qu√° l√¢u kh√¥ng ph·∫£n h·ªìi th√¨ b·∫°n c√≥ th·ªÉ /end v√† t√¨m l·∫°i.
        '''
    payload = {
        "recipient": {"id": user.id},
        "message": {
            "attachment": {
                "type": "template",
                "payload": {
                    "template_type": "button",
                    "text":text_user,
                    "buttons": [
                        {
                            "type": "postback",
                            "title": "XEM H√ÄNG CH·ªú",
                            "payload": "MENU_VIEW_QUEUE"
                        },
                        {
                            "type": "postback",
                            "title": "G·ª¢I √ù M·ªû L·ªúI",
                            "payload": "SUGGEST"
                        }

                    ]
                }
            }
        }
    }
    out(payload)

    text_partner = f'''ƒê√£ t√¨m th·∫•y!
Sau {wait_time}, ch√∫ng t√¥i ƒë√£ t√¨m ƒë∆∞·ª£c ng∆∞·ªùi ph√π h·ª£p cho b·∫°n, hehe

B·∫°n ƒë√£ ƒë∆∞·ª£c mai m·ªëi v·ªõi: {user.nickname}
1 x√≠u v·ªÅ h·ªç: {user.introduce}

Ch√∫c b·∫°n ngon mi·ªáng!
'''
    payload = {
        "recipient": {"id": partner.id},
        "message": {
            "attachment": {
                "type": "template",
                "payload": {
                    "template_type": "button",
                    "text":text_partner,
                    "buttons": [
                        {
                            "type": "postback",
                            "title": "G·ª¢I √ù M·ªû L·ªúI",
                            "payload": "SUGGEST"
                        }

                    ]
                }
            }
        }
    }
    out(payload)

def postback_feedback(user): #Y√™u c·∫ßu ng∆∞·ªùi d√πng feedback v·ªÅ cu·ªôc tr√≤ chuy·ªán v·ª´a r·ªìi
    payload= {}
    out(payload)

def postback_confirm_end(user): #Hi·ªán ra khi ng∆∞·ªùi d√πng mu·ªën end, h·ªèi l·∫°i cho ch·∫Øc l√† c√≥ mu·ªën r·ªùi kh√¥ng?
    # ·ªü ƒë√¢y ph·∫£i c√≥ #END
    payload = {
        "recipient": {"id": user.id},
        "message": {
            "attachment": {
                "type": "template",
                "payload": {
                    "template_type": "button",
                    "text":"B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën tho√°t?",
                    "buttons": [
                        {
                            "type": "postback",
                            "title": "Tho√°t",
                            "payload": "#END"
                        },
                        {
                            "type": "postback",
                            "title": "Kh√¥ng",
                            "payload": "NOTHING"
                        }
                    ]
                }
            }
        }
    }
    out(payload)

def postback_end_chat(user): #Khi end chat
    payload = {
        "recipient": {"id": user.id},
        "message": {
            "attachment": {
                "type": "template",
                "payload": {
                    "template_type": "button",
                    "text":"Xong 1 hi·ªáp, ti·∫øp ph√°t n·ªØa nh·ªÉ?",
                    "buttons": [
                        {
                            "type": "postback",
                            "title": "T√åM M·ªêI M·ªöI",
                            "payload": "#AGAIN"
                        },
                        {
                            "type": "postback",
                            "title": "XEM H√ÄNG CH·ªú",
                            "payload": "MENU_VIEW_QUEUE"
                        },
                        {
                            "type": "postback",
                            "title": "V·ªÄ TRANG CH·ª¶",
                            "payload": "#WELCOME"
                        },
                    ]
                }
            }
        }
    }
    out(payload)
def postback_partner_end(partner_id):
    payload = {
        "recipient": {"id": partner_id},
        "message": {
            "attachment": {
                "type": "template",
                "payload": {
                    "template_type": "button",
                    "text":"Ng∆∞·ªùi kia ƒë√£ b·ªè b·∫°n m√† ra ƒëi... Th√¥i th√¨ ƒë·ªïi ƒë√†o nh·ªâ?",
                    "buttons": [
                        {
                            "type": "postback",
                            "title": "T√åM M·ªêI M·ªöI",
                            "payload": "#AGAIN"
                        },
                        {
                            "type": "postback",
                            "title": "XEM H√ÄNG CH·ªú",
                            "payload": "MENU_VIEW_QUEUE"
                        },
                        {
                            "type": "postback",
                            "title": "V·ªÄ TRANG CH·ª¶",
                            "payload": "#WELCOME"
                        },
                    ]
                }
            }
        }
    }
    out(payload)

def postback_end(user):
    payload = {
        "recipient": {"id": user.id},
        "message": {
            "attachment": {
                "type": "template",
                "payload": {
                    "template_type": "button",
                    "text":"K·∫øt th√∫c 1 hi·ªáp",
                    "buttons": [
                        {
                            "type": "postback",
                            "title": "V·ªÄ TRANG CH·ª¶",
                            "payload": "#WELCOME"
                        },
                    ]
                }
            }
        }
    }
    out(payload)

def postback_guide(user):
    payload = {
        "recipient": {"id": user.id},
        "message": {"text": '''D·ªÖ v√£il·ªìn ƒë·∫øo c·∫ßn h∆∞·ªõng d·∫´n ai c≈©ng bi·∫øt
1. M√†y ch·ªçn gi·ªõi t√≠nh, Nam ho·∫∑c N·ªØ ho·∫∑c Bu√™ƒëu√™ (kh√¥ng chia B·ªôt t√¥m v·ªõi T√≥p M·ª°)
2. M√†y ch·ªçn gu m√†y, Nam ho·∫∑c N·ªØ ho·∫∑c C√≥ l·ªó l√† ƒë∆∞·ª£c
3. T√¨m ki·∫øm, h·ª£p th√¨ h·ªá th·ªëng n√≥ t·ª± gh√©p
4. Mu·ªën ƒë·ªïi nickname ho·∫∑c about me cho n√≥ ng·∫ßu th√¨ d√πng:
/nickname ho·∫∑c /gioithieu
5. Ngu vƒÉn th√¨ ·∫•n v√†o c√°i "G·ª£i √Ω m·ªü l·ªùi" ƒë·ªÉ tao t√°n h·ªô cho
6. T√°n nhau vƒÉn minh l·ªãch s·ª±, b√¨nh th∆∞·ªùng admin kh√¥ng ƒë·ªçc ƒë∆∞·ª£c ƒë√¢u nh∆∞ng g√µ /report n√≥ t·∫£i tin nh·∫Øn v·ªÅ b·ªçn tao ƒë·ªçc ƒë∆∞·ª£c, ban ch·∫øt c·ª• m√†y
7. Kh√¥ng bi·∫øt nh·∫Øn g√¨ n·ªØa th√¨ g√µ /end ho·∫∑c ·∫•n c√°i n√∫t ‚ùåK·∫æT TH√öC ·ªü MENU ƒë·ªÉ ƒë·ªïi ƒë√†o

Mu·ªën bi·∫øt c√≥ nh·ªØng l·ªánh g√¨ th√¨ ·∫•n /lenh m√† ƒë·ªçc
Thi tho·∫£ng c√≥ m·∫•y c√¢u l·ªánh hay hay nh∆∞ ki·ªÉu /vinhdanh ho·∫∑c /thongke th√¨ g√µ v√†o m√† ngh·ªãch, b·ªçn tao gi·∫•u bitcoin trong ƒë·∫•y
'''},
        "messaging_type": "RESPONSE"
    }
    out(payload)

def postback_introduction(user): #Gi·ªõi thi·ªáu v·ªÅ ·ª©ng d·ª•ng
    payload= {}
    out(payload)

def postback_view_queue(user): #Xem h√†ng ƒë·ª£i, to√†n l√† code SQL, n√™n ƒë·ªÉ anh vi·∫øt
    count_male = sum(1 for x in wait_list if x.gender == "MALE") + 3
    count_female = sum(1 for x in wait_list if x.gender == "FEMALE") + 5
    count_bi = sum(1 for x in wait_list if x.gender == "BI") + 7
    count_suit = sum(1 for x in wait_list if check_match(user, x) & (user.id != x.id))
    payload = {
        "recipient": {"id": user.id},
        "message": {"text": f'''Hi·ªán ƒëang c√≥:
{count_male} Nam
{count_female} N·ªØ
{count_bi} B√≠ m·∫≠t trong h√†ng ch·ªù

{count_suit} ng∆∞·ªùi ph√π h·ª£p gu c·ªßa b·∫°n
ƒê·ªÉ bi·∫øt th√™m nh·ªØng th√¥ng tin th√∫ v·ªã kh√°c, h√£y g√µ /thongke
'''},
        "messaging_type": "RESPONSE"
    }
    out(payload)

def postback_change_info(user): #N·∫±m ·ªü menu khi ng∆∞·ªùi d√πng mu·ªën ƒë·ªïi nickname ho·∫∑c gi·ªõi thi·ªáu b·∫£n th√¢n
    #g√µ /nickname ƒë·ªÉ ƒë·ªïi bi·ªát danh
    # /gioithieu ƒë·ªÉ ƒë·ªïi gi·ªõi thi·ªáu v·ªÅ b·∫°n
    # /gioitinh Nam, Nu, Bi ƒë·ªÉ ƒë·ªïi gi·ªõi t√≠nh
    # /gu Nam, Nu, Bi ƒë·ªÉ ƒë·ªïi gu:
    payload= {}
    out(payload)

def postback_suggest(user): #Hi·ªán ra khi ng∆∞·ªùi d√πng mu·ªën g·ª£i √Ω vƒÉn ƒë·ªÉ b·∫Øt chuy·ªán
    payload = {
        "recipient": {"id": user.id},
        "message": {"text": "Hay l√† m√¨nh c·ª© b·∫•t ch·∫•p h·∫øt y√™u nhau ƒëi anh...\nSau c√°c em t·ª± th√™m n·ªôi dung v√†o ƒë√¢y, l√†m th√†nh nhi·ªÅu c√°i n√∫t ƒë·ªÉ h·ªç b·∫•m r·ªìi g·ª≠i c√¢u vƒÉn ƒëi c≈©ng ƒë∆∞·ª£c"},
        "messaging_type": "RESPONSE"
    }
    out(payload)
def postback_still_chat(user):
    payload = {
        "recipient": {"id": user.id},
        "message": {"text": "L√¨ gh√™ ha, redflag üö© v·∫≠y m√† v·∫´n ƒë√¢m ƒë·∫ßu\n Ngu nh∆∞ ch√≥"},
        "messaging_type": "RESPONSE"
    }
    out(payload)

def postback_error(user):
    payload = {
        "recipient": {"id": user.id},
        "message": {"text": "B·∫°n ƒëang b·ªã l·ªói b·∫•t th∆∞·ªùng do server, vui l√≤ng g√µ /end, tho√°t v√† sau ƒë√≥ g√µ /fix. C·∫£m ∆°n"},
        "messaging_type": "RESPONSE"
    }
    out(payload)

