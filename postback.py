from user import User
import requests
import json
from db_connection import *
from handle_waitlist import *
from constant import *

headers = {"Content-Type": "application/json"}
def out(payload):
    try:
        response = requests.post(url, headers=headers, data=json.dumps(payload))
        response.raise_for_status()  # Raise an exception for 4xx/5xx status codes
        print(f"Generic template with image sent successfully: {response.json()}")
    except requests.exceptions.RequestException as e:
        print(f"Failed to send generic template with image: {e}")

#B·∫Øt ƒë·∫ßu s·ª≠a t·ª´ ƒë√¢y

def send_image(recipient_id, image_url):
    headers = {"Content-Type": "application/json"}
    payload = {
        "recipient": {"id": recipient_id},
        "message": {
            "attachment": {
                "type": "image",
                "payload": {"url": image_url}
            }
        },
        "messaging_type": "RESPONSE"
    }
    try:
        response = requests.post(f"https://graph.facebook.com/{facebook_api_version}/me/messages?access_token={ACCESS_TOKEN}", headers=headers, json=payload)
        response.raise_for_status()
        print(f"Image sent successfully: {response.json()}")
    except requests.exceptions.RequestException as e:
        print(f"Failed to send image: {e}")

def postback_welcome(user):  # Template hi·ªán ra l√∫c ch√†o ƒë√≥n
    # Ki·ªÉm tra th√¥ng tin nickname v√† gi·ªõi thi·ªáu
    if user.nickname.startswith("#CDA") or user.introduce == "Ch∆∞a c√≥" or user.nickname == "" or user.introduce == "":
        text = (
            "üéâ Ch√†o m·ª´ng s·ª± tr·ªü l·∫°i c·ªßa Chatbot H·∫πn H√≤! üéâ\n\n"
            "Sau m·ªôt th·ªùi gian v·∫Øng b√≥ng, chatbot h·∫πn h√≤ c·ªßa CDA ƒë√£ ch√≠nh th·ª©c quay tr·ªü l·∫°i v√† m·∫°nh m·∫Ω h∆°n bao gi·ªù h·∫øt! üöÄ "
            "V·ªõi nh·ªØng n√¢ng c·∫•p ƒë√°ng ch√∫ √Ω, chatbot h·∫πn h√≤ gi·ªù ƒë√¢y kh√¥ng ch·ªâ gi√∫p b·∫°n t√¨m ƒë∆∞·ª£c nh·ªØng cu·ªôc tr√≤ chuy·ªán th√∫ v·ªã m√† c√≤n mang l·∫°i nh·ªØng k·∫øt n·ªëi th·ª±c s·ª±, g·∫ßn g≈©i v√† c√° nh√¢n h√≥a h∆°n.\n\n"
            "‚ú® T·∫°i sao b·∫°n n√™n th·ª≠ s·ª≠ d·ª•ng chatbot h·∫πn h√≤ c·ªßa CDA:\n"
            "üí¨ T√¨m ki·∫øm b·∫°n ƒë·ªìng h√†nh: Chatbot gi√∫p b·∫°n kh√°m ph√° nh·ªØng h·ªì s∆° ph√π h·ª£p v·ªõi s·ªü th√≠ch v√† y√™u c·∫ßu c·ªßa b·∫°n.\n"
            "üí° G·ª£i √Ω nh·ªØng c√¢u h·ªèi h·∫πn h√≤: Chatbot cung c·∫•p nh·ªØng c√¢u h·ªèi th√∫ v·ªã ƒë·ªÉ b·∫°n d·ªÖ d√†ng t·∫°o ra m·ªôt cu·ªôc tr√≤ chuy·ªán l√¥i cu·ªën.\n"
            "üìÖ Tr√≤ chuy·ªán t·ª± ƒë·ªông v√† nhanh ch√≥ng: B·∫°n c√≥ th·ªÉ tr√≤ chuy·ªán v·ªõi chatbot ƒë·ªÉ l√†m quen v√† t√¨m hi·ªÉu, ho·∫∑c ƒë∆°n gi·∫£n l√† gi·∫£i tr√≠.\n"
            "üí¨ H·ªó tr·ª£ 24/7: D√π b·∫°n ·ªü ƒë√¢u, v√†o l√∫c n√†o, chatbot lu√¥n s·∫µn s√†ng tr·ª£ gi√∫p.\n"
            "üîí T√≠nh nƒÉng b·∫£o m·∫≠t v√† ri√™ng t∆∞: M·ªçi th√¥ng tin c√° nh√¢n c·ªßa b·∫°n s·∫Ω ƒë∆∞·ª£c b·∫£o v·ªá an to√†n.\n\n"
            "üéâ Tr·∫£i nghi·ªám ngay v√† t√¨m ki·∫øm t√¨nh y√™u! ƒê·ª´ng ng·∫ßn ng·∫°i tr√≤ chuy·ªán v·ªõi chatbot c·ªßa ch√∫ng m√¨nh ƒë·ªÉ b·∫Øt ƒë·∫ßu h√†nh tr√¨nh t√¨m ki·∫øm m·ªôt n·ª≠a y√™u th∆∞∆°ng!\n\n"
            "üëâ ƒê·ªÉ b·∫Øt ƒë·∫ßu, h√£y ·∫•n n√∫t *B·∫ÆT ƒê·∫¶U* ngay nh√©!"
        )
        payload_text = {
            "recipient": {"id": user.id},
            "message": {"text": text}
        }
        out(payload_text)

    text = (
        "üéâ Trang ch·ªß c·ªßa Chatbot H·∫πn H√≤!"
    )

    payload_text = {
        "recipient": {"id": user.id},
        "message": {"text": text}
    }
    out(payload_text)

    # Lu√¥n hi·ªÉn th·ªã template ch√†o m·ª´ng
    payload = {
        "recipient": {"id": user.id},
        "message": {
            "attachment": {
                "type": "template",
                "payload": {
                    "template_type": "generic",
                    "elements": [
                        {
                            "title": "CHAT ·∫®N DANH N√ÄO!",
                            "image_url": image_menu_welcome_1,
                            "buttons": [
                                {
                                    "type": "postback",
                                    "title": "B·∫Øt ƒë·∫ßu",
                                    "payload": "#START"
                                },
                                {
                                    "type": "postback",
                                    "title": "H∆∞·ªõng d·∫´n s·ª≠ d·ª•ng",
                                    "payload": "MENU_GUIDE"
                                },
                                {
                                    "type": "postback",
                                    "title": "Gi·ªõi thi·ªáu",
                                    "payload": "MENU_INTRODUCTION"
                                }
                            ]
                        },
                        {
                            "title": "ƒêANG C√ì G√å DI·ªÑN RA V·∫¨Y?",
                            "image_url": image_menu_welcome_2,
                            "buttons": [
                                {
                                    "type": "web_url",
                                    "title": "S·∫Øp t·ªõi CDA c√≥ g√¨?",
                                    "url": "https://www.facebook.com/share/p/19XFWoMewv/?mibextid=wwXIfr"
                                },
                                {
                                    "type": "postback",
                                    "title": "Xem h√†ng ch·ªù",
                                    "payload": "MENU_VIEW_QUEUE"
                                }
                            ]
                        },
                        {
                            "title": "ALO, T√îI NGHE",
                            "image_url": image_menu_welcome_3,
                            "buttons": [
                                {
                                    "type": "web_url",
                                    "title": "B√°o l·ªói",
                                    "url": "https://www.messenger.com/t/226475877409994"
                                },
                                {
                                    "type": "web_url",
                                    "title": "Li√™n h·ªá admin",
                                    "url": "https://www.messenger.com/t/226475877409994"
                                },
                                {
                                    "type": "web_url",
                                    "title": "Fanpage CDA",
                                    "url": "https://www.facebook.com/CDAclub"
                                }
                            ]
                        }
                    ]
                }
            }
        }
    }
    out(payload)
    send_image(user.id, sticker_welcome)


def postback_first_come_nickname(user):
    # Ki·ªÉm tra nickname
    if not user.introduce or user.introduce == "Ch∆∞a c√≥":
        text = ''' üí°B·∫°n h√£y nh·∫≠p theo c√∫ ph√°p sau:
üëâ /nickname <nickname_c·ªßa_b·∫°n>
‚ú® V√≠ d·ª•: /nickname mai khanhh
        '''
        payload = {
            "recipient": {"id": user.id},
            "message": {"text": text}
        }
        out(payload)
        return False  # Ch∆∞a ho√†n th√†nh b∆∞·ªõc n√†y
    return True  #  gi·ªõi thi·ªáu ƒë√£ h·ª£p l·ªá

def postback_first_come(user):
    text = (
        "üí° *Th√¥ng tin hi·ªán t·∫°i c·ªßa b·∫°n:*\n"
        "‚Ä¢ Nickname: (ch∆∞a c√≥)\n"
        "‚Ä¢ Gi·ªõi thi·ªáu: (ch∆∞a c√≥)\n\n"
        "üëâ ƒê·ªÉ b·∫Øt ƒë·∫ßu, h√£y ·∫•n n√∫t ·ªü ph√≠a d∆∞·ªõi ƒë·ªÉ ƒëi·ªÅn ƒë·∫ßy ƒë·ªß th√¥ng tin c·∫ßn thi·∫øt\n"
    )

    payload = {
        "recipient": {"id": user.id},
        "message": {
            "attachment": {
                "type": "template",
                "payload": {
                    "template_type": "button",
                    "text": text,
                    "buttons": [
                        {
                            "type": "postback",
                            "title": "ƒêi·ªÅn th√¥ng tin b·∫£n th√¢n",
                            "payload": "#START_NHAP"
                        }
                    ]
                }
            }
        }
    }
    out(payload)


def postback_remind_nickname(user):
    if user.nickname.startswith("#CDA") or user.introduce == "Ch∆∞a c√≥" or user.nickname == "" or user.introduce == "":
        text = '''Ti·∫øp t·ªõi, b·∫°n h√£y ƒëi·ªÅn ph·∫ßn gi·ªõi thi·ªáu. Vui l√≤ng nh·∫≠p th√¥ng tin tr∆∞·ªõc khi ti·∫øp t·ª•c.
+ C√¢u l·ªánh: /gioithieu <gi·ªõi_thi·ªáu_b·∫£n_th√¢n>
       VD : /gioithieu T√¥i l√† th√†nh vi√™n CLB CDA Gen 17
            /gioithieu c·∫ßn ng∆∞·ªùi g·∫•p m√†n h·ªô, nhi·ªÅu mu·ªói m√† bung m√†n ra kh√¥ng b√≠t g·∫•p ü•∫
'''
        payload = {
            "recipient": {"id": user.id},
            "message": {
                "attachment": {
                    "type": "template",
                    "payload": {
                        "template_type": "button",
                        "text": text,
                        "buttons": [
                            {
                                "type": "postback",
                                "title": "NH·∫¨P TH√îNG TIN",
                                "payload": "#RETRY"
                            }
                        ]
                    }
                }
            }
        }
    else:
        text = '''ƒê·ª´ng qu√™n c√°c c√¢u l·ªánh:
/nickname ƒë·ªÉ ƒë·ªïi bi·ªát danh
/gioithieu ƒë·ªÉ gi·ªõi thi·ªáu ng·∫Øn v·ªÅ m√¨nh nh√©!
'''
        payload = {
            "recipient": {"id": user.id},
            "message": {
                "attachment": {
                    "type": "template",
                    "payload": {
                        "template_type": "button",
                        "text": text,
                        "buttons": [
                            {
                                "type": "postback",
                                "title": "TI·∫æP",
                                "payload": "#NEXT"
                            }
                        ]
                    }
                }
            }
        }
    out(payload)


def postback_setting(user):
    if user.nickname.startswith("#CDA") or user.introduce == "Ch∆∞a c√≥" or user.nickname == "" or user.introduce == "":
        text = '''Ti·∫øp t·ªõi, b·∫°n h√£y ƒëi·ªÅn ph·∫ßn gi·ªõi thi·ªáu. Vui l√≤ng nh·∫≠p th√¥ng tin tr∆∞·ªõc khi ti·∫øp t·ª•c.
C√¢u l·ªánh: /gioithieu <gi·ªõi_thi·ªáu_b·∫£n_th√¢n>
VD : /gioithieu T√¥i l√† th√†nh vi√™n CLB CDA Gen 17

'''
        payload = {
            "recipient": {"id": user.id},
            "message": {
                "attachment": {
                    "type": "template",
                    "payload": {
                        "template_type": "button",
                        "text": text,
                        "buttons": [
                            {
                                "type": "postback",
                                "title": "NH·∫¨P TH√îNG TIN",
                                "payload": "#RETRY"
                            }
                        ]
                    }
                }
            }
        }
    else:
        gender, partner = 'A', 'B'
        match user.gender:
            case 'MALE':
                gender = 'üë±‚Äç‚ôÇÔ∏è Nam'
            case 'FEMALE':
                gender = 'üë±‚Äç‚ôÄÔ∏è N·ªØ'
            case 'BI':
                gender = 'üè≥Ô∏è‚Äçüåà Bisexual'
        match user.partner_gender:
            case 'MALE':
                partner = 'üë±‚Äç‚ôÇÔ∏è Nam'
            case 'FEMALE':
                partner = 'üë±‚Äç‚ôÄÔ∏è N·ªØ'
            case 'BI':
                partner = 'üè≥Ô∏è‚Äçüåà Bisexual'

        text = f'''ü§ñ *Th√¥ng tin hi·ªán t·∫°i c·ªßa b·∫°n:*  
- üè∑Ô∏è *Nickname:* {user.nickname}  
- üë§ *Gi·ªõi t√≠nh b·∫°n ch·ªçn:* {gender}  
- ‚ù§Ô∏è *Gu b·∫°n ch·ªçn:* {partner}  
- ‚úçÔ∏è *Gi·ªõi thi·ªáu ng·∫Øn g·ªçn:* "{user.introduce}"  

üëâ B·∫°n c√≥ mu·ªën thay ƒë·ªïi th√¥ng tin hay b·∫Øt ƒë·∫ßu t√¨m ki·∫øm ngay? üéØ  
        '''
        payload = {
            "recipient": {"id": user.id},
            "message": {
                "attachment": {
                    "type": "template",
                    "payload": {
                        "template_type": "button",
                        "text": text,
                        "buttons": [
                            {
                                "type": "postback",
                                "title": "T√åM KI·∫æM LU√îN!",
                                "payload": "#SEARCH"
                            },
                            {
                                "type": "postback",
                                "title": "ƒê·ªîI TH√îNG TIN",
                                "payload": "#CHANGE"
                            }
                        ]
                    }
                }
            }
        }
    out(payload)


def postback_setgender(user):
    """Hi·ªÉn th·ªã b∆∞·ªõc ch·ªçn gi·ªõi t√≠nh."""
    text = "H√£y ch·ªçn gi·ªõi t√≠nh c·ªßa b·∫°n:"
    payload = {
        "recipient": {"id": user.id},
        "message": {
            "attachment": {
                "type": "template",
                "payload": {
                    "template_type": "button",
                    "text": text,
                    "buttons": [
                        {"type": "postback", "title": "üë±‚Äç‚ôÇÔ∏è Nam", "payload": "#ME_MALE"},
                        {"type": "postback", "title": "üë±‚Äç‚ôÄÔ∏è N·ªØ", "payload": "#ME_FEMALE"},
                        {"type": "postback", "title": "üè≥Ô∏è‚Äçüåà Bisexual", "payload": "#ME_BI"}
                    ]
                }
            }
        }
    }
    out(payload)


def  postback_partnergender(user): #Hi·ªán ra ƒë·ªÉ ng∆∞·ªùi d√πng ch·ªçn gu c·ªßa m√¨nh
    payload = {
        "recipient": {"id": user.id},
        "message": {
            "attachment": {
                "type": "template",
                "payload": {
                    "template_type": "button",
                    "text":"Gu c·ªßa b·∫°n l√† g√¨?",
                    "buttons": [
                        {
                            "type": "postback",
                            "title": "üë±‚Äç‚ôÇÔ∏è Nam",
                            "payload": "#YOU_MALE"
                        },
                        {
                            "type": "postback",
                            "title": "üë±‚Äç‚ôÄÔ∏è N·ªØ",
                            "payload": "#YOU_FEMALE"
                        },
                        {
                            "type": "postback",
                            "title": "üè≥Ô∏è‚Äçüåà Bisexual",
                            "payload": "#YOU_BI"
                        },
                    ]
                }
            }
        }
    }
    out(payload)

def postback_search(user): #Th√¥ng b√°o b·∫Øt ƒë·∫ßu t√¨m ki·∫øm
    payload = {
        "recipient": {"id": user.id},
        "message": {
            "attachment": {
                "type": "template",
                "payload": {
                    "template_type": "button",
                    "text": " ü§ñBOTBOT ƒëang t√¨m ki·∫øm...\nƒê·ª£i ch√∫t nh√©",
                    "buttons": [
                        {
                            "type": "postback",
                            "title": "D·ª™NG T√åM KI·∫æM",
                            "payload": "#STOP_SEARCH"
                        }

                    ]
                }
            }
        }
    }
    out(payload)
    send_image(user.id, sticker_search)

def postback_found(user, partner, wait_time):
    #Code ne
    diff = datetime.now() - partner.last_action_time if partner.last_action_time else timedelta(seconds=0)
    wait_seconds = diff.total_seconds()  #Thay time

    #dk
    if wait_seconds < 60:
        text_user = f'''üéâ BOTBOT ƒë√£ t√¨m th·∫•y! 
üíå B·∫°n ƒë√£ ƒë∆∞·ª£c mai m·ªëi v·ªõi: *{partner.nickname}*  
üìñ M·ªôt ch√∫t v·ªÅ h·ªç: *{partner.introduce}*  

‚è≥ {partner.nickname} ch·ªâ m·ªõi ch·ªù *{wait_time}*, duy√™n s·ªë ƒë√£ t√¨m ƒë·∫øn hai b·∫°n tr∆∞·ªõc khi Cupid k·ªãp gi∆∞∆°ng cung! 
‚ú® Hai b·∫°n c√≥ th·ªÉ *nh·∫Øn tin*, *g·ª≠i ·∫£nh*, *video*, v√† *voice* cho nhau.  

üëâ *H√£y c√πng b·∫Øt ƒë·∫ßu cu·ªôc tr√≤ chuy·ªán ngay n√†o!* 
        '''
    else:
        text_user = f'''ü§ñ BOTBOT ƒë√£ t√¨m th·∫•y!  
B·∫°n ƒë√£ ƒë∆∞·ª£c mai m·ªëi v·ªõi: *{partner.nickname}*  
üìñ M·ªôt ch√∫t v·ªÅ h·ªç: *{partner.introduce}*  

‚è≥ {partner.nickname} ƒë√£ ƒë·ª£i b·∫°n *{wait_time}*, c√≥ th·ªÉ h·ªç ch∆∞a ƒë·ªÉ √Ω tin nh·∫Øn ngay.  
‚ú® G·∫∑p nhau l√† duy√™n s·ªë, h√£y ki√™n nh·∫´n m·ªôt ch√∫t nh√©!  

Hai b·∫°n c√≥ th·ªÉ:  
- Nh·∫Øn tin  
- G·ª≠i ·∫£nh  
- G·ª≠i video  
- G·ª≠i voice  

üëâ N·∫øu th·∫•y {partner.nickname} qu√° l√¢u kh√¥ng ph·∫£n h·ªìi, b·∫°n c√≥ th·ªÉ g√µ */end* ƒë·ªÉ k·∫øt th√∫c v√† t√¨m ki·∫øm ng∆∞·ªùi kh√°c.  
Ch√∫c b·∫°n tr√≤ chuy·ªán th·∫≠t vui v·∫ª!
        '''

    # Send the message to the user
    payload = {
        "recipient": {"id": user.id},
        "message": {
            "attachment": {
                "type": "template",
                "payload": {
                    "template_type": "button",
                    "text": text_user,
                    "buttons": [
                        {
                            "type": "postback",
                            "title": "XEM H√ÄNG CH·ªú",
                            "payload": "MENU_VIEW_QUEUE"
                        },
                        {
                            "type": "postback",
                            "title": "G·ª¢I √ù M·ªû L·ªúI",
                            "payload": "SUGGEST"
                        },
                        {
                            "type": "postback",
                            "title": "CH∆†I TR√í CH∆†I",
                            "payload": "GAME"
                        }
                    ]
                }
            }
        }
    }
    out(payload)

    # Construct message for partner
    text_partner = f'''ƒê√£ t√¨m th·∫•y!
Sau {wait_time}, ch√∫ng t√¥i ƒë√£ t√¨m ƒë∆∞·ª£c ng∆∞·ªùi ph√π h·ª£p cho b·∫°n, hehe

B·∫°n ƒë√£ ƒë∆∞·ª£c mai m·ªëi v·ªõi: {user.nickname}
1 x√≠u v·ªÅ h·ªç: {user.introduce}\n
Hai b·∫°n c√≥ th·ªÉ g·ª≠i ·∫£nh, video v√† voice cho nhau.\n
Ch√∫c b·∫°n ngon mi·ªáng!
'''
    payload = {
        "recipient": {"id": partner.id},
        "message": {
            "attachment": {
                "type": "template",
                "payload": {
                    "template_type": "button",
                    "text": text_partner,
                    "buttons": [
                        {
                            "type": "postback",
                            "title": "G·ª¢I √ù M·ªû L·ªúI",
                            "payload": "SUGGEST"
                        },
                        {
                            "type": "postback",
                            "title": "CH∆†I TR√í CH∆†I",
                            "payload": "GAME"
                        }
                    ]
                }
            }
        }
    }
    out(payload)
    send_image(user.id, sticker_found_finder)
    send_image(user.id, sticker_found_waiter)


def postback_feedback(user): #Y√™u c·∫ßu ng∆∞·ªùi d√πng feedback v·ªÅ cu·ªôc tr√≤ chuy·ªán v·ª´a r·ªìi
    payload= {}
    out(payload)

def postback_confirm_end(user): #Hi·ªán ra khi ng∆∞·ªùi d√πng mu·ªën end, h·ªèi l·∫°i cho ch·∫Øc l√† c√≥ mu·ªën r·ªùi kh√¥ng?
    # ·ªü ƒë√¢y ph·∫£i c√≥ #END
    payload = {
        "recipient": {"id": user.id},
        "message": {
            "attachment": {
                "type": "template",
                "payload": {
                    "template_type": "button",
                    "text":"B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën tho√°t?",
                    "buttons": [
                        {
                            "type": "postback",
                            "title": "Tho√°t",
                            "payload": "#END"
                        },
                        {
                            "type": "postback",
                            "title": "Kh√¥ng",
                            "payload": "NOTHING"
                        }
                    ]
                }
            }
        }
    }
    out(payload)

def postback_end_chat(user): #Khi end chat
    payload = {
        "recipient": {"id": user.id},
        "message": {
            "attachment": {
                "type": "template",
                "payload": {
                    "template_type": "button",
                    "text":"Xong 1 hi·ªáp, ti·∫øp ph√°t n·ªØa nh·ªÉ?",
                    "buttons": [
                        {
                            "type": "postback",
                            "title": "T√åM M·ªêI M·ªöI",
                            "payload": "#AGAIN"
                        },
                        {
                            "type": "postback",
                            "title": "XEM H√ÄNG CH·ªú",
                            "payload": "MENU_VIEW_QUEUE"
                        },
                        {
                            "type": "postback",
                            "title": "V·ªÄ TRANG CH·ª¶",
                            "payload": "#WELCOME"
                        },
                    ]
                }
            }
        }
    }
    out(payload)
def postback_partner_end(partner_id):
    payload = {
        "recipient": {"id": partner_id},
        "message": {
            "attachment": {
                "type": "template",
                "payload": {
                    "template_type": "button",
                    "text":"Ng∆∞·ªùi kia ƒë√£ b·ªè b·∫°n m√† ra ƒëi... Th√¥i th√¨ ƒë·ªïi ƒë√†o nh·ªâ?",
                    "buttons": [
                        {
                            "type": "postback",
                            "title": "T√åM M·ªêI M·ªöI",
                            "payload": "#AGAIN"
                        },
                        {
                            "type": "postback",
                            "title": "XEM H√ÄNG CH·ªú",
                            "payload": "MENU_VIEW_QUEUE"
                        },
                        {
                            "type": "postback",
                            "title": "V·ªÄ TRANG CH·ª¶",
                            "payload": "#WELCOME"
                        },
                    ]
                }
            }
        }
    }
    out(payload)

def postback_end(user):
    payload = {
        "recipient": {"id": user.id},
        "message": {
            "attachment": {
                "type": "template",
                "payload": {
                    "template_type": "button",
                    "text":"K·∫øt th√∫c 1 hi·ªáp",
                    "buttons": [
                        {
                            "type": "postback",
                            "title": "V·ªÄ TRANG CH·ª¶",
                            "payload": "#WELCOME"
                        },
                    ]
                }
            }
        }
    }
    out(payload)

def postback_guide(user):
    payload = {
        "recipient": {"id": user.id},
        "message": {
            "text": (
                "üåü *H∆∞·ªõng d·∫´n s·ª≠ d·ª•ng Chatbot H·∫πn H√≤ CDA* üåü\n\n"
                "üí° *1. Nh·∫≠p th√¥ng tin c√° nh√¢n:*\n"
                "- ‚úèÔ∏è Nh·∫≠p nickname: `/nickname <nickname_c·ªßa_b·∫°n>`\n"
                "- üñãÔ∏è Nh·∫≠p gi·ªõi thi·ªáu b·∫£n th√¢n: `/gioithieu <gi·ªõi_thi·ªáu_ng·∫Øn_g·ªçn>`\n"
                "- üë§ Ch·ªçn gi·ªõi t√≠nh: Nam, N·ªØ ho·∫∑c B√≠ m·∫≠t.\n"
                "- üéØ Ch·ªçn gu gi·ªõi t√≠nh b·∫°n mu·ªën l√†m quen: Nam, N·ªØ ho·∫∑c 'Nh·∫°c n√†o c≈©ng nh·∫£y'.\n\n"
                "üîç *2. B·∫Øt ƒë·∫ßu t√¨m ki·∫øm:*\n"
                "- Sau khi nh·∫≠p ƒë·ªß th√¥ng tin, nh·∫•n n√∫t 'T√¨m ki·∫øm' ƒë·ªÉ k·∫øt n·ªëi v·ªõi m·ªôt ng∆∞·ªùi ph√π h·ª£p! ü•∞\n\n"
                "‚öôÔ∏è *3. T√πy ch·ªânh th√¥ng tin c√° nh√¢n:*\n"
                "- üîÑ ƒê·ªïi nickname: `/nickname <nickname_m·ªõi>`\n"
                "- üîÑ ƒê·ªïi gi·ªõi thi·ªáu: `/gioithieu <gi·ªõi_thi·ªáu_m·ªõi>`\n"
                "- üîÑ Thay ƒë·ªïi gu ho·∫∑c gi·ªõi t√≠nh b·∫±ng c√°ch ch·ªçn l·∫°i trong 'ƒê·ªïi th√¥ng tin'.\n\n"
                "üí¨ *4. G·ª£i √Ω m·ªü l·ªùi:*\n"
                "- üó®Ô∏è Nh·∫•n 'G·ª£i √Ω m·ªü l·ªùi' khi kh√¥ng bi·∫øt c√°ch b·∫Øt ƒë·∫ßu. Ch√∫ng t√¥i s·∫Ω cung c·∫•p √Ω t∆∞·ªüng th√∫ v·ªã! üòÑ\n\n"
                "‚ùå *5. K·∫øt th√∫c tr√≤ chuy·ªán:*\n"
                "- N·∫øu kh√¥ng th·∫•y ph√π h·ª£p, g√µ /end ho·∫∑c nh·∫•n 'K·∫øt th√∫c' ƒë·ªÉ t√¨m ki·∫øm ng∆∞·ªùi kh√°c. üõë\n\n"
                "üîí *6. L∆∞u √Ω & b·∫£o m·∫≠t:*\n"
                "- üîê Khi ƒëang t√¨m ki·∫øm, b·∫°n s·∫Ω kh√¥ng th·ªÉ nh·∫•n 'B·∫Øt ƒë·∫ßu' l·∫°i.\n"
                "- üîá Do ch∆∞a ƒë∆∞·ª£c s·ª± c·∫•p ph√©p c·ªßa Facebook, cu·ªôc tr√≤ chuy·ªán s·∫Ω ch·ªâ c√≥ ch·ª©c nƒÉng g·ª≠i tin nh·∫Øn, h√¨nh ·∫£nh, video v√† voice.\n"
                "- üîè M·ªçi th√¥ng tin c√° nh√¢n s·∫Ω ƒë∆∞·ª£c b·∫£o v·ªá tuy·ªát ƒë·ªëi.\n\n"
                "üëâ *G√µ l·ªánh /lenh ƒë·ªÉ xem danh s√°ch ƒë·∫ßy ƒë·ªß c√°c l·ªánh.*\n\n"
                "üíñ *Ch√∫c b·∫°n t√¨m ƒë∆∞·ª£c nh·ªØng k·∫øt n·ªëi th√∫ v·ªã v√† √Ω nghƒ©a!* üíñ"
            )
        },
        "messaging_type": "RESPONSE"
    }
    out(payload)

def postback_introduction(user):
    """G·ª≠i tin nh·∫Øn gi·ªõi thi·ªáu v·ªÅ chatbot."""
    text = (
        f"üéâ Xin ch√†o {user.nickname if user.nickname else 'b·∫°n'}! üéâ\n\n"
        "Ch√†o m·ª´ng b·∫°n ƒë·∫øn v·ªõi chatbot H·∫πn H√≤ CDA! ƒê√¢y l√† nh·ªØng t√≠nh nƒÉng n·ªïi b·∫≠t m√† ch√∫ng t√¥i mang l·∫°i:\n\n"
        "‚ú® *T√≠nh nƒÉng n·ªïi b·∫≠t:*\n"
        "üí¨ *Tr√≤ chuy·ªán ·∫©n danh:* T√¨m ki·∫øm nh·ªØng cu·ªôc tr√≤ chuy·ªán th√∫ v·ªã v√† k·∫øt n·ªëi v·ªõi nh·ªØng ng∆∞·ªùi b·∫°n m·ªõi.\n"
        "üí° *G·ª£i √Ω c√¢u h·ªèi th√∫ v·ªã:* Kh√¥ng bi·∫øt b·∫Øt ƒë·∫ßu t·ª´ ƒë√¢u? H√£y th·ª≠ c√°c g·ª£i √Ω m·ªü ƒë·∫ßu c·ª±c hay ho c·ªßa ch√∫ng t√¥i.\n"
        "üìÖ *Tr√≤ chuy·ªán m·ªçi l√∫c m·ªçi n∆°i:* Kh√¥ng gi·ªõi h·∫°n th·ªùi gian, b·∫°n c√≥ th·ªÉ s·ª≠ d·ª•ng chatbot 24/7.\n"
        "üîí *B·∫£o m·∫≠t tuy·ªát ƒë·ªëi:* T·∫•t c·∫£ th√¥ng tin c·ªßa b·∫°n s·∫Ω ƒë∆∞·ª£c gi·ªØ ri√™ng t∆∞.\n\n"
        "üëâ H√£y b·∫Øt ƒë·∫ßu h√†nh tr√¨nh c·ªßa b·∫°n ngay b√¢y gi·ªù b·∫±ng c√°ch nh·∫•n n√∫t *B·∫Øt ƒë·∫ßu* ho·∫∑c ch·ªçn t√≠nh nƒÉng m√† b·∫°n y√™u th√≠ch!\n\n"
        "Ch√∫c b·∫°n c√≥ tr·∫£i nghi·ªám th·∫≠t tuy·ªát v·ªùi! üòä"
    )

    payload = {
        "recipient": {"id": user.id},
        "message": {"text": text},
        "messaging_type": "RESPONSE"
    }
    out(payload)

def postback_game(user):
    payload = {
        "recipient": {"id": user.id},
        "message": {"text": "Hi·ªán t·∫°i, t√≠nh nƒÉng n√†y ƒëang trong qu√° tr√¨nh ho√†n thi·ªán.\nTh·ª≠ l·∫°i sau 3/2 nh√≥.üòä"},
        "messaging_type": "RESPONSE"
    }
    out(payload)

def postback_view_queue(user): #Xem h√†ng ƒë·ª£i, to√†n l√† code SQL, n√™n ƒë·ªÉ anh vi·∫øt
    print("Wait list after global ", wait_list)
    count_male = 0
    for x in wait_list:
        if (x.gender == "MALE"):
            count_male += 1
    count_male += 3
    count_female = 0
    for x in wait_list:
        if x.gender == "FEMALE":
            count_female += 1
    count_female += 5
    count_bi = 0
    for x in wait_list:
        if x.gender == "BI":
            count_bi += 1
    count_bi += 7
    count_suit = 0
    for x in wait_list:
        if (check_match(user, x)) and (user.id != x.id) :
            count_suit += 1
    payload = {
        "recipient": {"id": user.id},
        "message": {"text": f'''Hi·ªán ƒëang c√≥:
{count_male} Nam
{count_female} N·ªØ
{count_bi} B√≠ m·∫≠t trong h√†ng ch·ªù

{count_suit} ng∆∞·ªùi ph√π h·ª£p gu c·ªßa b·∫°n
'''},
        "messaging_type": "RESPONSE"
    }
    out(payload)

def postback_change_info(user): #N·∫±m ·ªü menu khi ng∆∞·ªùi d√πng mu·ªën ƒë·ªïi nickname ho·∫∑c gi·ªõi thi·ªáu b·∫£n th√¢n
    postback_remind_nickname(user)

#def postback_suggest(user): #Hi·ªán ra khi ng∆∞·ªùi d√πng mu·ªën g·ª£i √Ω vƒÉn ƒë·ªÉ b·∫Øt chuy·ªán
#    payload = {
#        "recipient": {"id": user.id},
#        "message": {"text": "Ch√†o b·∫°n, b·∫°n ƒÉn c∆°m ch∆∞a \n B·∫°n ∆°i, b·ªô lu·∫≠t m·ªõi c√≥ quy ƒë·ªãnh n√†o c·∫•m l√†m quen v·ªõi ng∆∞·ªùi d·ªÖ th∆∞∆°ng kh√¥ng nh·ªâ ? N·∫øu kh√¥ng th√¨ cho m√¨nh th·ª≠ nh√© :3 \n Tr·ªùi l·∫°nh nh∆∞ n√†y m√¨nh h·ªèi nh·ªè, c·∫≠u c√≥ c·∫ßn ai nh·∫Øc m·∫∑c ·∫•m hong \n C·∫≠u c√≥ bi·∫øt l√† ƒë·ªÉ nghƒ© c√°ch b·∫Øt chuy·ªán v·ªõi c·∫≠u t·ªõ m·∫•t bao nhi√™u th·ªùi gian c·ªßa cu·ªôc ƒë·ªùi kh√¥ng, v·∫≠y n√™n h√£y ƒë·ªÅn b√π b·∫±ng c√°ch tr√≤ chuy·ªán v·ªõi t·ªõ h√¥m nay ƒëi \n C·∫≠u ∆°i m√¨nh ƒëang l√†m m·ªôt b√†i kh·∫£o s√°t : C·∫≠u th√≠ch u·ªëng tr√† s·ªØa v·ªõi ƒë∆∞·ªùng hay v·ªõi t·ªõ h∆°n v·∫≠y \n Nay xem tarot ng∆∞·ªùi ta b·∫£o t·ªõ nh·∫Øn tin v·ªõi ƒë·ªãnh m·ªánh m√† t√¨nh c·ªù th·∫ø n√†o nay t·ªõ l·∫°i nh·∫Øn v·ªõi m·ªói c·∫≠u nh·ªâ "},
#        "messaging_type": "RESPONSE"
#    }
#    out(payload)
def postback_suggest(user):
    payload = {
        "recipient": {"id": user.id},
        "message": {
            "attachment": {
                "type": "template",
                "payload": {
                    "template_type": "button",
                    "text": "Tr∆∞·ªõc ti√™n b·∫°n mu·ªën l·ª±a ch·ªçn th·∫£ th√≠nh d∆∞·ªõi phong c√°ch trai hay g√°i",
                    "buttons": [
                        {
                            "type": "postback",
                            "title": "Nam",
                            "payload": "SUGGEST_BOY"
                        },
                        {
                            "type": "postback",
                            "title": "N·ªØ",
                            "payload": "SUGGEST_GIRL"
                        },
                    ]
                }
            }
        },
        "messaging_type": "RESPONSE"
    }
    out(payload)

def postback_suggest_boy(user):
    payload = {
        "recipient": {"id": user.id},
        "message": {
            "attachment": {
                "type": "template",
                "payload": {
                    "template_type": "button",
                    "text": (
                        "B·∫°n ch·ªâ vi·ªác nh·∫•n v√†o n√∫t v√† vƒÉn b·∫£n s·∫Ω ƒë∆∞·ª£c chuy·ªÉn sang cho ng∆∞·ªùi ƒë∆∞·ª£c gh√©p c·∫∑p v·ªõi b·∫°n.\n\n"
                        "1. B·∫°n ∆°i, b·ªô lu·∫≠t m·ªõi c√≥ quy ƒë·ªãnh n√†o c·∫•m l√†m quen v·ªõi ng∆∞·ªùi d·ªÖ th∆∞∆°ng kh√¥ng nh·ªâ? "
                        "N·∫øu kh√¥ng th√¨ cho m√¨nh th·ª≠ nh√© üòé‚ú®\n"
                        "2. C·∫≠u c√≥ bi·∫øt l√† ƒë·ªÉ nghƒ© c√°ch b·∫Øt chuy·ªán v·ªõi c·∫≠u t·ªõ m·∫•t bao nhi√™u th·ªùi gian kh√¥ng? "
                        "V·∫≠y n√™n ƒë·ªÅn b√π cho t·ªõ b·∫±ng c√°ch tr√≤ chuy·ªán h√¥m nay ƒëi! üòèüïí\n"
                        "3. M√¨nh ƒëang l√†m kh·∫£o s√°t: B·∫°n th√≠ch u·ªëng tr√† s·ªØa v·ªõi ƒë∆∞·ªùng hay v·ªõi m√¨nh h∆°n? "
                        "ƒê·ª´ng ch·ªçn sai nh√© üòâüßã"
                    ),
                    "buttons": [
                        {
                            "type": "postback",
                            "title": "1. T·ª± tin, h√†i h∆∞·ªõc",
                            "payload": "SUGGEST_BOY_1"
                        },
                        {
                            "type": "postback",
                            "title": "2. T√°o b·∫°o, d√≠ d·ªèm",
                            "payload": "SUGGEST_BOY_2"
                        },
                        {
                            "type": "postback",
                            "title": "3. D·ªÖ th∆∞∆°ng, vui v·∫ª",
                            "payload": "SUGGEST_BOY_3"
                        }
                    ]
                }
            }
        },
        "messaging_type": "RESPONSE"
    }
    out(payload)

def postback_suggest_boy1(user):  # Hi·ªán ra khi ng∆∞·ªùi d√πng mu·ªën g·ª£i √Ω vƒÉn ƒë·ªÉ b·∫Øt chuy·ªán
    payload = {
        "recipient": {"id": user.id},
        "message": {"text": "ü§ñ Tin nh·∫Øn c·ªßa b·∫°n: \n\n"
                            "üëâ 'B·∫°n ∆°i, b·ªô lu·∫≠t m·ªõi c√≥ quy ƒë·ªãnh n√†o c·∫•m l√†m quen v·ªõi ng∆∞·ªùi d·ªÖ th∆∞∆°ng kh√¥ng nh·ªâ? "
                            "N·∫øu kh√¥ng th√¨ cho m√¨nh th·ª≠ nh√© üòé‚ú®'\n\n"
                            "‚úîÔ∏è ƒê√£ ƒë∆∞·ª£c g·ª≠i t·ªõi ng∆∞·ªùi gh√©p n·ªëi v·ªõi b·∫°n. Ch√∫c b·∫°n may m·∫Øn! üéâ"},
        "messaging_type": "RESPONSE"
    }
    out(payload)
    payload = {
        "recipient": {"id": user.partner_id},
        "message": {"text": "B·∫°n ∆°i, b·ªô lu·∫≠t m·ªõi c√≥ quy ƒë·ªãnh n√†o c·∫•m l√†m quen v·ªõi ng∆∞·ªùi d·ªÖ th∆∞∆°ng kh√¥ng nh·ªâ? N·∫øu kh√¥ng th√¨ cho m√¨nh th·ª≠ nh√© üòé‚ú®"},
        "messaging_type": "RESPONSE"
    }
    out(payload)

def postback_suggest_boy2(user):  # Hi·ªán ra khi ng∆∞·ªùi d√πng mu·ªën g·ª£i √Ω vƒÉn ƒë·ªÉ b·∫Øt chuy·ªán
    payload = {
        "recipient": {"id": user.id},
        "message": {"text": "ü§ñ Tin nh·∫Øn c·ªßa b·∫°n: \n\n"
                            "üëâ 'C·∫≠u c√≥ bi·∫øt l√† ƒë·ªÉ nghƒ© c√°ch b·∫Øt chuy·ªán v·ªõi c·∫≠u t·ªõ m·∫•t bao nhi√™u th·ªùi gian kh√¥ng? "
                            "V·∫≠y n√™n ƒë·ªÅn b√π cho t·ªõ b·∫±ng c√°ch tr√≤ chuy·ªán h√¥m nay ƒëi! üòèüïí'\n\n"
                            "‚úîÔ∏è ƒê√£ ƒë∆∞·ª£c g·ª≠i t·ªõi ng∆∞·ªùi gh√©p n·ªëi v·ªõi b·∫°n. Ch√∫c b·∫°n th√†nh c√¥ng! üí¨"},
        "messaging_type": "RESPONSE"
    }
    out(payload)
    payload = {
        "recipient": {"id": user.partner_id},
        "message": {"text": "C·∫≠u c√≥ bi·∫øt l√† ƒë·ªÉ nghƒ© c√°ch b·∫Øt chuy·ªán v·ªõi c·∫≠u t·ªõ m·∫•t bao nhi√™u th·ªùi gian kh√¥ng? V·∫≠y n√™n ƒë·ªÅn b√π cho t·ªõ b·∫±ng c√°ch tr√≤ chuy·ªán h√¥m nay ƒëi! üòèüïí"},
        "messaging_type": "RESPONSE"
    }
    out(payload)

def postback_suggest_boy3(user):  # Hi·ªán ra khi ng∆∞·ªùi d√πng mu·ªën g·ª£i √Ω vƒÉn ƒë·ªÉ b·∫Øt chuy·ªán
    payload = {
        "recipient": {"id": user.id},
        "message": {"text": "ü§ñ Tin nh·∫Øn c·ªßa b·∫°n: \n\n"
                            "üëâ 'M√¨nh ƒëang l√†m kh·∫£o s√°t: B·∫°n th√≠ch u·ªëng tr√† s·ªØa v·ªõi ƒë∆∞·ªùng hay v·ªõi m√¨nh h∆°n? "
                            "ƒê·ª´ng ch·ªçn sai nh√© üòâüßã'\n\n"
                            "‚úîÔ∏è ƒê√£ ƒë∆∞·ª£c g·ª≠i t·ªõi ng∆∞·ªùi gh√©p n·ªëi v·ªõi b·∫°n. Hy v·ªçng b·∫°n c√≥ m·ªôt kh·ªüi ƒë·∫ßu tuy·ªát v·ªùi! üçπ"},
        "messaging_type": "RESPONSE"
    }
    out(payload)
    payload = {
        "recipient": {"id": user.partner_id},
        "message": {"text": "M√¨nh ƒëang l√†m kh·∫£o s√°t: B·∫°n th√≠ch u·ªëng tr√† s·ªØa v·ªõi ƒë∆∞·ªùng hay v·ªõi m√¨nh h∆°n? ƒê·ª´ng ch·ªçn sai nh√© üòâüßã"},
        "messaging_type": "RESPONSE"
    }
    out(payload)


def postback_suggest_girl(user):
    payload = {
        "recipient": {"id": user.id},
        "message": {
            "attachment": {
                "type": "template",
                "payload": {
                    "template_type": "button",
                    "text": (
                        "B·∫°n ch·ªâ vi·ªác nh·∫•n v√†o n√∫t v√† vƒÉn b·∫£n s·∫Ω ƒë∆∞·ª£c g·ª≠i t·ªõi ng∆∞·ªùi ƒë∆∞·ª£c gh√©p c·∫∑p.\n\n"
                        "1. Tr·ªùi l·∫°nh nh∆∞ n√†y, m√¨nh h·ªèi nh·ªè, c·∫≠u c√≥ c·∫ßn ai nh·∫Øc m·∫∑c ·∫•m hong? üß•‚ùÑÔ∏è\n"
                        "2. Nay xem tarot, ng∆∞·ªùi ta b·∫£o t·ªõ nh·∫Øn tin v·ªõi ƒë·ªãnh m·ªánh. "
                        "T·ª± nhi√™n t·ªõ l·∫°i nh·∫Øn v·ªõi c·∫≠u, c·∫≠u th·∫•y c√≥ h·ª£p l√Ω kh√¥ng? üîÆüòå\n"
                        "3. C·∫≠u th√≠ch ki·ªÉu ng∆∞·ªùi n√≥i chuy·ªán th√∫ v·ªã hay ƒë√°ng y√™u h∆°n? "
                        "V√¨ m√¨nh gi·ªèi c·∫£ hai n√™n h∆°i ph√¢n v√¢n! üòäüí¨"
                    ),
                    "buttons": [
                        {
                            "type": "postback",
                            "title": "1. ·∫§m √°p, nh·∫π nh√†ng.",
                            "payload": "SUGGEST_GIRL_1"
                        },
                        {
                            "type": "postback",
                            "title": "2. Huy·ªÅn b√≠, tinh t·∫ø",
                            "payload": "SUGGEST_GIRL_2"
                        },
                        {
                            "type": "postback",
                            "title": "3. H√†i h∆∞·ªõc, ƒë√°ng y√™u.",
                            "payload": "SUGGEST_GIRL_3"
                        }
                    ]
                }
            }
        },
        "messaging_type": "RESPONSE"
    }
    out(payload)

def postback_suggest_girl1(user):  # Hi·ªán ra khi ng∆∞·ªùi d√πng mu·ªën g·ª£i √Ω vƒÉn ƒë·ªÉ b·∫Øt chuy·ªán
    payload = {
        "recipient": {"id": user.id},
        "message": {"text": "ü§ñ Tin nh·∫Øn c·ªßa b·∫°n: \n\n"
                            "üëâ 'Tr·ªùi l·∫°nh nh∆∞ n√†y, m√¨nh h·ªèi nh·ªè, c·∫≠u c√≥ c·∫ßn ai nh·∫Øc m·∫∑c ·∫•m hong? üß•‚ùÑÔ∏è'\n\n"
                            "‚úîÔ∏è ƒê√£ ƒë∆∞·ª£c g·ª≠i t·ªõi ng∆∞·ªùi gh√©p n·ªëi v·ªõi b·∫°n. Ch√∫c b·∫°n th√†nh c√¥ng! üî•"},
        "messaging_type": "RESPONSE"
    }
    out(payload)
    payload = {
        "recipient": {"id": user.partner_id},
        "message": {"text": "Tr·ªùi l·∫°nh nh∆∞ n√†y, m√¨nh h·ªèi nh·ªè, c·∫≠u c√≥ c·∫ßn ai nh·∫Øc m·∫∑c ·∫•m hong? üß•‚ùÑÔ∏è"},
        "messaging_type": "RESPONSE"
    }
    out(payload)

def postback_suggest_girl2(user):  # Hi·ªán ra khi ng∆∞·ªùi d√πng mu·ªën g·ª£i √Ω vƒÉn ƒë·ªÉ b·∫Øt chuy·ªán
    payload = {
        "recipient": {"id": user.id},
        "message": {"text": "ü§ñ Tin nh·∫Øn c·ªßa b·∫°n: \n\n"
                            "üëâ 'Nay xem tarot, ng∆∞·ªùi ta b·∫£o t·ªõ nh·∫Øn tin v·ªõi ƒë·ªãnh m·ªánh. "
                            "T·ª± nhi√™n t·ªõ l·∫°i nh·∫Øn v·ªõi c·∫≠u, c·∫≠u th·∫•y c√≥ h·ª£p l√Ω kh√¥ng? üîÆüòå'\n\n"
                            "‚úîÔ∏è ƒê√£ ƒë∆∞·ª£c g·ª≠i t·ªõi ng∆∞·ªùi gh√©p n·ªëi v·ªõi b·∫°n. Ch√∫c b·∫°n may m·∫Øn! ‚ú®"},
        "messaging_type": "RESPONSE"
    }
    out(payload)
    payload = {
        "recipient": {"id": user.partner_id},
        "message": {"text": "Nay xem tarot, ng∆∞·ªùi ta b·∫£o t·ªõ nh·∫Øn tin v·ªõi ƒë·ªãnh m·ªánh. T·ª± nhi√™n t·ªõ l·∫°i nh·∫Øn v·ªõi c·∫≠u, c·∫≠u th·∫•y c√≥ h·ª£p l√Ω kh√¥ng? üîÆüòå"},
        "messaging_type": "RESPONSE"
    }
    out(payload)

def postback_suggest_girl3(user):  # Hi·ªán ra khi ng∆∞·ªùi d√πng mu·ªën g·ª£i √Ω vƒÉn ƒë·ªÉ b·∫Øt chuy·ªán
    payload = {
        "recipient": {"id": user.id},
        "message": {"text": "ü§ñ Tin nh·∫Øn c·ªßa b·∫°n: \n\n"
                            "üëâ 'C·∫≠u th√≠ch ki·ªÉu ng∆∞·ªùi n√≥i chuy·ªán th√∫ v·ªã hay ƒë√°ng y√™u h∆°n? "
                            "V√¨ m√¨nh gi·ªèi c·∫£ hai n√™n h∆°i ph√¢n v√¢n! üòäüí¨'\n\n"
                            "‚úîÔ∏è ƒê√£ ƒë∆∞·ª£c g·ª≠i t·ªõi ng∆∞·ªùi gh√©p n·ªëi v·ªõi b·∫°n. Hy v·ªçng cu·ªôc tr√≤ chuy·ªán th√∫ v·ªã s·∫Ω b·∫Øt ƒë·∫ßu! üí¨"},
        "messaging_type": "RESPONSE"
    }
    out(payload)
    payload = {
        "recipient": {"id": user.partner_id},
        "message": {"text": "C·∫≠u th√≠ch ki·ªÉu ng∆∞·ªùi n√≥i chuy·ªán th√∫ v·ªã hay ƒë√°ng y√™u h∆°n? V√¨ m√¨nh gi·ªèi c·∫£ hai n√™n h∆°i ph√¢n v√¢n! üòäüí¨"},
        "messaging_type": "RESPONSE"
    }
    out(payload)

#def postback_suggest_boy(user):
#    messages = [
#        "D√†nh cho Nam n√®",
#        "1.B·∫°n ∆°i, b·ªô lu·∫≠t m·ªõi c√≥ quy ƒë·ªãnh n√†o c·∫•m l√†m quen v·ªõi ng∆∞·ªùi d·ªÖ th∆∞∆°ng kh√¥ng nh·ªâ? N·∫øu kh√¥ng th√¨ cho m√¨nh th·ª≠ nh√© üòé‚ú®",
#        "2.C·∫≠u c√≥ bi·∫øt l√† ƒë·ªÉ nghƒ© c√°ch b·∫Øt chuy·ªán v·ªõi c·∫≠u t·ªõ m·∫•t bao nhi√™u th·ªùi gian kh√¥ng? V·∫≠y n√™n ƒë·ªÅn b√π cho t·ªõ b·∫±ng c√°ch tr√≤ chuy·ªán h√¥m nay ƒëi! üòèüïí",
#        "3.M√¨nh ƒëang l√†m kh·∫£o s√°t: B·∫°n th√≠ch u·ªëng tr√† s·ªØa v·ªõi ƒë∆∞·ªùng hay v·ªõi m√¨nh h∆°n? ƒê·ª´ng ch·ªçn sai nh√© üòâüßã"
#    ]
#    payload = {
#        "recipient": {"id": user.id},
#        "message": {"text": "\n\n".join(messages)},
#        "messaging_type": "RESPONSE"
#    }
#    out(payload)

def postback_send_button(user):
    test_message = "ƒê√¢y l√† m·ªôt tin nh·∫Øn test t·ª± ƒë·ªông t·ª´ chatbot!"
    send_message(user.id, test_message)  # G·ª≠i tin nh·∫Øn tr∆∞·ªõc

    payload = {
        "recipient": {"id": user.id},
        "messaging_type": "RESPONSE"
    }
    out(payload)  # G·ª≠i payload n·∫øu c·∫ßn


def postback_still_chat(user):
    payload = {
        "recipient": {"id": user.id},
        "message": {"text": "H√£y t·ª´ t·ª´ ƒë·ªÉ ta c√≥ th·ªÉ t√¨m hi·ªÉu r√µ v·ªÅ nhau h∆°n nh√© \n "},
        "messaging_type": "RESPONSE"
    }
    out(payload)

#Postback retry

def postback_retry(user):
    """Ki·ªÉm tra th√¥ng tin ng∆∞·ªùi d√πng v√† chuy·ªÉn ti·∫øp ƒë·∫øn b∆∞·ªõc ti·∫øp theo n·∫øu ƒë·∫ßy ƒë·ªß."""
    missing_info = []

    # Ki·ªÉm tra thi·∫øu nickname
    if user.nickname.startswith("#CDA") or not user.nickname:
        missing_info.append("nickname")

    # Ki·ªÉm tra thi·∫øu gi·ªõi thi·ªáu
    if user.introduce == "Ch∆∞a c√≥" or not user.introduce:
        missing_info.append("gi·ªõi thi·ªáu")

    if missing_info:
        # Hi·ªÉn th·ªã th√¥ng tin c√≤n thi·∫øu
        missing_text = " v√† ".join(missing_info)
        text = f'''‚ö†Ô∏è B·∫°n ch∆∞a ho√†n thi·ªán th√¥ng tin. B·∫°n c√≤n thi·∫øu *{missing_text}*.
üìå Vui l√≤ng nh·∫≠p th√¥ng tin ƒë·ªÉ ti·∫øp t·ª•c:

üí¨ C√¢u l·ªánh: /gioithieu gi·ªõi thi·ªáu ng·∫Øn v·ªÅ m√¨nh
‚ú® V√≠ d·ª•: `/gioithieu M√¨nh l√† fan MU 20 nƒÉm üöÄ`

üëâ H√£y ho√†n thi·ªán th√¥ng tin v√† b·∫Øt ƒë·∫ßu k·∫øt n·ªëi ngay nh√©! üíñ
'''
        payload = {
            "recipient": {"id": user.id},
            "message": {"text": text}
        }
    else:
        # N·∫øu ƒë·∫ßy ƒë·ªß, chuy·ªÉn ng∆∞·ªùi d√πng sang b∆∞·ªõc ch·ªçn gi·ªõi t√≠nh
        text = "Th√¥ng tin c·ªßa b·∫°n ƒë√£ ƒë·∫ßy ƒë·ªß! H√£y ti·∫øp t·ª•c ƒë·∫øn b∆∞·ªõc ch·ªçn gi·ªõi t√≠nh."
        payload = {
            "recipient": {"id": user.id},
            "message": {
                "attachment": {
                    "type": "template",
                    "payload": {
                        "template_type": "button",
                        "text": text,
                        "buttons": [
                            {
                                "type": "postback",
                                "title": "CH·ªåN GI·ªöI T√çNH",
                                "payload": "#NEXT"
                            }
                        ]
                    }
                }
            }
        }
    out(payload)


#Postback retry

def postback_error(user):
    payload = {
        "recipient": {"id": user.id},
        "message": {"text": "B·∫°n ƒëang b·ªã l·ªói b·∫•t th∆∞·ªùng do server, vui l√≤ng g√µ /end, tho√°t v√† sau ƒë√≥ g√µ /fix. C·∫£m ∆°n"},
        "messaging_type": "RESPONSE"
    }
    out(payload)